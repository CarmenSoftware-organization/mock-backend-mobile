{
  "openapi": "3.1.1",
  "paths": {
    "/api/auth/login": {
      "post": {
        "deprecated": false,
        "description": "Login to the application",
        "operationId": "login",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              },
              "examples": {
                "Login": {
                  "value": {
                    "email": "test@test.com",
                    "password": "123456"
                  }
                },
                "Login with wrong email": {
                  "value": {
                    "email": "test@test.com",
                    "password": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Login",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "deprecated": false,
        "description": "Logout from the application",
        "operationId": "logout",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Logout",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/register": {
      "post": {
        "deprecated": false,
        "description": "Register a new user",
        "operationId": "register",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Register successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Register",
        "tags": [
          "Register"
        ]
      }
    },
    "/api/auth/invite-user": {
      "post": {
        "deprecated": false,
        "description": "Invite a new user",
        "operationId": "inviteUser",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invite user successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Invite User",
        "tags": [
          "Register"
        ]
      }
    },
    "/api/auth/register-confirm": {
      "post": {
        "deprecated": false,
        "description": "Confirm a new user",
        "operationId": "registerConfirm",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterConfirmDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Register confirm successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Register Confirm",
        "tags": [
          "Register"
        ]
      }
    },
    "/api/auth/refresh-token": {
      "post": {
        "deprecated": false,
        "description": "Refresh a token",
        "operationId": "refreshToken",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh token successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Refresh Token",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "deprecated": false,
        "description": "Forgot password",
        "operationId": "forgotPassword",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Forgot password successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {}
        ],
        "summary": "Forgot Password",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/mobile": {
      "get": {
        "operationId": "AuthController_mobile",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/web": {
      "get": {
        "operationId": "AuthController_web",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/business-unit/default": {
      "post": {
        "deprecated": false,
        "description": "Set default tenant",
        "operationId": "setDefaultTenant",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default tenant set successfully"
          },
          "404": {
            "description": "Default tenant not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Set default tenant",
        "tags": [
          "[Method] Post"
        ]
      }
    },
    "/api/config/currencies/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a currency by its unique identifier",
        "operationId": "findOneCurrency",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency retrieved successfully"
          },
          "404": {
            "description": "Currency not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a currency by ID",
        "tags": [
          "config-currencies",
          "[Method] Get - Config"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Update a currency",
        "operationId": "updateCurrency",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrenciesUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Currency updated successfully"
          },
          "404": {
            "description": "Currency not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a currency",
        "tags": [
          "config-currencies",
          "[Method] Put - Config"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Update a currency",
        "operationId": "updateCurrency",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrenciesUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Currency updated successfully"
          },
          "404": {
            "description": "Currency not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a currency",
        "tags": [
          "config-currencies",
          "[Method] Patch - Config"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a currency",
        "operationId": "deleteCurrency",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currency deleted successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a currency",
        "tags": [
          "config-currencies",
          "[Method] Delete - Config"
        ]
      }
    },
    "/api/config/currencies": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all currencies",
        "operationId": "findAllCurrencies",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Currencies retrieved successfully"
          },
          "404": {
            "description": "Currencies not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all currencies",
        "tags": [
          "config-currencies",
          "[Method] Get - Config"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new currency",
        "operationId": "createCurrency",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrenciesCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Currency created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new currency",
        "tags": [
          "config-currencies",
          "[Method] Post - Config"
        ]
      }
    },
    "/api/config/delivery-point/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieve a delivery point by its unique identifier",
        "operationId": "findOneDeliveryPoint",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery point retrieved successfully"
          },
          "404": {
            "description": "Delivery point not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a delivery point by ID",
        "tags": [
          "config-delivery-point",
          "[Method] Get - Config"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Update a delivery point",
        "operationId": "updateDeliveryPoint",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryPointUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delivery point updated successfully"
          },
          "404": {
            "description": "Delivery point not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a delivery point",
        "tags": [
          "config-delivery-point",
          "[Method] Patch - Config"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a delivery point",
        "operationId": "deleteDeliveryPoint",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery point deleted successfully"
          },
          "404": {
            "description": "Delivery point not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a delivery point",
        "tags": [
          "config-delivery-point",
          "[Method] Delete - Config"
        ]
      }
    },
    "/api/config/delivery-point": {
      "get": {
        "deprecated": false,
        "description": "Retrieve all delivery points",
        "operationId": "findAllDeliveryPoints",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery points retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all delivery points",
        "tags": [
          "config-delivery-point",
          "[Method] Get - Config"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new delivery point",
        "operationId": "createDeliveryPoint",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryPointCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Delivery point created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new delivery point",
        "tags": [
          "config-delivery-point",
          "[Method] Post - Config"
        ]
      }
    },
    "/api/config/departments/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a department by ID",
        "operationId": "findOneDepartment",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a department by ID",
        "tags": [
          "config-departments",
          "[Method] Get - Config"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Update a department",
        "operationId": "updateDepartment",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentsUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Department updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a department",
        "tags": [
          "config-departments",
          "[Method] Patch - Config"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a department",
        "operationId": "deleteDepartment",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a department",
        "tags": [
          "config-departments",
          "[Method] Delete - Config"
        ]
      }
    },
    "/api/config/departments": {
      "get": {
        "deprecated": false,
        "description": "Get all departments",
        "operationId": "findAllDepartments",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Departments retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all departments",
        "tags": [
          "config-departments",
          "[Method] Get - Config"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new department",
        "operationId": "createDepartment",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentsCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Department created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new department",
        "tags": [
          "config-departments",
          "[Method] Post - Config"
        ]
      }
    },
    "/api/config/exchange-rate/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a exchange rate by ID",
        "operationId": "findOneExchangeRate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange rate retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a exchange rate by ID",
        "tags": [
          "config-exchange-rate",
          "[Method] Get - Config"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Update a exchange rate",
        "operationId": "updateExchangeRate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeRateUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Exchange rate updated successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a exchange rate",
        "tags": [
          "config-exchange-rate",
          "[Method] Patch - Config"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a exchange rate",
        "operationId": "deleteExchangeRate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange rate deleted successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a exchange rate",
        "tags": [
          "config-exchange-rate",
          "[Method] Delete - Config"
        ]
      }
    },
    "/api/config/exchange-rate": {
      "get": {
        "deprecated": false,
        "description": "Get all exchange rates",
        "operationId": "findAllExchangeRates",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange rates retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all exchange rates",
        "tags": [
          "config-exchange-rate",
          "[Method] Get - Config"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new exchange rate",
        "operationId": "createExchangeRate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExchangeRateCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Exchange rate created successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a new exchange rate",
        "tags": [
          "config-exchange-rate",
          "[Method] Post - Config"
        ]
      }
    },
    "/api/config/locations/{id}": {
      "get": {
        "deprecated": false,
        "description": "Get a location by ID",
        "operationId": "findOneLocation",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withUser",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withProducts",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location retrieved successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a location by ID",
        "tags": [
          "config-locations",
          "[Method] Get - Config"
        ]
      },
      "patch": {
        "deprecated": false,
        "description": "Update a location",
        "operationId": "updateLocation",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location updated successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a location",
        "tags": [
          "config-locations",
          "[Method] Patch - Config"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Delete a location",
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Location deleted successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a location",
        "tags": [
          "config-locations",
          "[Method] Delete - Config"
        ]
      }
    },
    "/api/config/locations": {
      "get": {
        "deprecated": false,
        "description": "Get all locations",
        "operationId": "findAllLocations",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Locations retrieved successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all locations",
        "tags": [
          "config-locations",
          "[Method] Get - Config"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Create a new location",
        "operationId": "createLocation",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Location created successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new location",
        "tags": [
          "config-locations",
          "[Method] Post - Config"
        ]
      }
    },
    "/api/config/price-list/upload-excel": {
      "post": {
        "operationId": "Config_PriceListController_uploadExcel",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      }
    },
    "/api/config/price-list/{id}/download-excel": {
      "get": {
        "operationId": "Config_PriceListController_downloadExcel",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      }
    },
    "/api/config/price-list": {
      "post": {
        "operationId": "Config_PriceListController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      },
      "get": {
        "operationId": "Config_PriceListController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      }
    },
    "/api/config/price-list/{id}": {
      "get": {
        "operationId": "Config_PriceListController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      },
      "patch": {
        "operationId": "Config_PriceListController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PriceListUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      },
      "delete": {
        "operationId": "Config_PriceListController_remove",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Price List"
        ]
      }
    },
    "/api/config/products/category/{id}": {
      "get": {
        "operationId": "Config_ProductCategoryController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Category"
        ]
      },
      "put": {
        "operationId": "Config_ProductCategoryController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Category"
        ]
      },
      "delete": {
        "operationId": "Config_ProductCategoryController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Category"
        ]
      }
    },
    "/api/config/products/category": {
      "get": {
        "operationId": "Config_ProductCategoryController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Category"
        ]
      },
      "post": {
        "operationId": "Config_ProductCategoryController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCategoryCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Category"
        ]
      }
    },
    "/api/config/products/item-group/{id}": {
      "get": {
        "operationId": "Config_ProductsController_findItemGroup",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Products"
        ]
      },
      "put": {
        "operationId": "Config_ProductItemGroupController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductItemGroupUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Item Group"
        ]
      },
      "delete": {
        "operationId": "Config_ProductItemGroupController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Item Group"
        ]
      }
    },
    "/api/config/products/item-group": {
      "get": {
        "operationId": "Config_ProductItemGroupController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Item Group"
        ]
      },
      "post": {
        "operationId": "Config_ProductItemGroupController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductItemGroupCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Item Group"
        ]
      }
    },
    "/api/config/products/sub-category/{id}": {
      "get": {
        "operationId": "Config_ProductSubCategoryController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Sub Category"
        ]
      },
      "put": {
        "operationId": "Config_ProductSubCategoryController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSubCategoryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Sub Category"
        ]
      },
      "delete": {
        "operationId": "Config_ProductSubCategoryController_remove",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Sub Category"
        ]
      }
    },
    "/api/config/products/sub-category": {
      "get": {
        "operationId": "Config_ProductSubCategoryController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Sub Category"
        ]
      },
      "post": {
        "operationId": "Config_ProductSubCategoryController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSubCategoryCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Product Sub Category"
        ]
      }
    },
    "/api/config/products/{id}": {
      "get": {
        "operationId": "Config_ProductsController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Products"
        ]
      },
      "patch": {
        "operationId": "Config_ProductsController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Products"
        ]
      },
      "delete": {
        "operationId": "Config_ProductsController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Products"
        ]
      }
    },
    "/api/config/products": {
      "get": {
        "operationId": "Config_ProductsController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Products"
        ]
      },
      "post": {
        "operationId": "Config_ProductsController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Products"
        ]
      }
    },
    "/api/config/units/{id}": {
      "get": {
        "operationId": "Config_UnitsController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Units"
        ]
      },
      "put": {
        "operationId": "Config_UnitsController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitsUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Units"
        ]
      },
      "delete": {
        "operationId": "Config_UnitsController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Units"
        ]
      }
    },
    "/api/config/units": {
      "get": {
        "operationId": "Config_UnitsController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Units"
        ]
      },
      "post": {
        "operationId": "Config_UnitsController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnitsCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Units"
        ]
      }
    },
    "/api/config/vendors/{id}": {
      "get": {
        "operationId": "Config_VendorsController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendors"
        ]
      },
      "put": {
        "operationId": "Config_VendorsController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendors"
        ]
      },
      "delete": {
        "operationId": "Config_VendorsController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendors"
        ]
      }
    },
    "/api/config/vendors": {
      "get": {
        "operationId": "Config_VendorsController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendors"
        ]
      },
      "post": {
        "operationId": "Config_VendorsController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendors"
        ]
      }
    },
    "/api/config/workflows/{id}": {
      "get": {
        "operationId": "Config_WorkflowsController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Workflows"
        ]
      },
      "put": {
        "operationId": "Config_WorkflowsController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Workflows"
        ]
      },
      "delete": {
        "operationId": "Config_WorkflowsController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Workflows"
        ]
      }
    },
    "/api/config/workflows": {
      "get": {
        "operationId": "Config_WorkflowsController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Workflows"
        ]
      },
      "post": {
        "operationId": "Config_WorkflowsController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Workflows"
        ]
      }
    },
    "/api/config/running-code/{id}": {
      "get": {
        "operationId": "Config_RunningCodeController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Running Code"
        ]
      },
      "put": {
        "operationId": "Config_RunningCodeController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunningCodeUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Running Code"
        ]
      },
      "delete": {
        "operationId": "Config_RunningCodeController_remove",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Running Code"
        ]
      }
    },
    "/api/config/running-code/result/{type}": {
      "get": {
        "operationId": "Config_RunningCodeController_findByType",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Running Code"
        ]
      }
    },
    "/api/config/running-code": {
      "get": {
        "operationId": "Config_RunningCodeController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Running Code"
        ]
      },
      "post": {
        "operationId": "Config_RunningCodeController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunningCodeCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Running Code"
        ]
      }
    },
    "/api/config/vendor-business-type/{id}": {
      "get": {
        "operationId": "Config_VendorBusinessTypeController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendor Business Type"
        ]
      },
      "patch": {
        "operationId": "Config_VendorBusinessTypeController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorBusinessTypeUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendor Business Type"
        ]
      },
      "delete": {
        "operationId": "Config_VendorBusinessTypeController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendor Business Type"
        ]
      }
    },
    "/api/config/vendor-business-type": {
      "get": {
        "operationId": "Config_VendorBusinessTypeController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendor Business Type"
        ]
      },
      "post": {
        "operationId": "Config_VendorBusinessTypeController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorBusinessTypeCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Vendor Business Type"
        ]
      }
    },
    "/api/config/credit-term/{id}": {
      "get": {
        "operationId": "Config_CreditTermController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Credit Term"
        ]
      },
      "patch": {
        "operationId": "Config_CreditTermController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditTermUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Credit Term"
        ]
      },
      "delete": {
        "operationId": "Config_CreditTermController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Credit Term"
        ]
      }
    },
    "/api/config/credit-term": {
      "get": {
        "operationId": "Config_CreditTermController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Credit Term"
        ]
      },
      "post": {
        "operationId": "Config_CreditTermController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditTermCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Credit Term"
        ]
      }
    },
    "/api/config/extra-cost-type/{id}": {
      "get": {
        "operationId": "Config_ExtraCostTypeController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Extra Cost Type"
        ]
      },
      "patch": {
        "operationId": "Config_ExtraCostTypeController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtraCostTypeUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Extra Cost Type"
        ]
      },
      "delete": {
        "operationId": "Config_ExtraCostTypeController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Extra Cost Type"
        ]
      }
    },
    "/api/config/extra-cost-type": {
      "get": {
        "operationId": "Config_ExtraCostTypeController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Extra Cost Type"
        ]
      },
      "post": {
        "operationId": "Config_ExtraCostTypeController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtraCostTypeCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Extra Cost Type"
        ]
      }
    },
    "/api/config/tax-profile/{id}": {
      "get": {
        "operationId": "Config_TaxProfileController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      },
      "patch": {
        "operationId": "Config_TaxProfileController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxProfileUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      },
      "delete": {
        "operationId": "Config_TaxProfileController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      }
    },
    "/api/config/tax-profile": {
      "get": {
        "operationId": "Config_TaxProfileController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      },
      "post": {
        "operationId": "Config_TaxProfileController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxProfileCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      }
    },
    "/api-system/cluster": {
      "get": {
        "operationId": "Platform_ClusterController_getListCluster",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Cluster"
        ]
      },
      "post": {
        "operationId": "Platform_ClusterController_createCluster",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Cluster"
        ]
      }
    },
    "/api-system/cluster/{id}": {
      "get": {
        "operationId": "Platform_ClusterController_getClusterById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Cluster"
        ]
      },
      "put": {
        "operationId": "Platform_ClusterController_updateCluster",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Cluster"
        ]
      },
      "delete": {
        "operationId": "Platform_ClusterController_deleteCluster",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Cluster"
        ]
      }
    },
    "/api-system/business-unit": {
      "get": {
        "operationId": "Platform_BusinessUnitController_getBusinessUnitList",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      },
      "post": {
        "operationId": "Platform_BusinessUnitController_createBusinessUnit",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUnitCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      }
    },
    "/api-system/business-unit/{id}": {
      "get": {
        "operationId": "Platform_BusinessUnitController_getBusinessUnitById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      },
      "put": {
        "operationId": "Platform_BusinessUnitController_updateBusinessUnit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUnitUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      },
      "delete": {
        "operationId": "Platform_BusinessUnitController_deleteBusinessUnit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      }
    },
    "/api-system/business-unit/{id}/system-configs": {
      "get": {
        "operationId": "Platform_BusinessUnitController_getBusinessUnitSystemConfigs",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      }
    },
    "/api-system/business-unit/{id}/configs": {
      "get": {
        "operationId": "Platform_BusinessUnitController_getBusinessUnitConfigs",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      },
      "patch": {
        "operationId": "Platform_BusinessUnitController_patchBusinessUnitConfigs",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessUnitConfigDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      },
      "put": {
        "operationId": "Platform_BusinessUnitController_putBusinessUnitConfigs",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      }
    },
    "/api-system/business-unit/{id}/configs/{key}": {
      "get": {
        "operationId": "Platform_BusinessUnitController_getBusinessUnitConfigByKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      },
      "delete": {
        "operationId": "Platform_BusinessUnitController_deleteBusinessUnitConfigByKey",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      }
    },
    "/api-system/business-unit/{id}/configs/{key}/exists": {
      "get": {
        "operationId": "Platform_BusinessUnitController_getBusinessUnitConfigByKeyExists",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - Business Unit"
        ]
      }
    },
    "/api-system/user/cluster/{id}": {
      "get": {
        "operationId": "Platform_UserClusterController_getUserCluster",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Cluster"
        ]
      },
      "put": {
        "operationId": "Platform_UserClusterController_UpdateUserCluster",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserClusterUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Cluster"
        ]
      },
      "delete": {
        "operationId": "Platform_UserClusterController_DeleteUserCluster",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Cluster"
        ]
      }
    },
    "/api-system/user/cluster": {
      "get": {
        "operationId": "Platform_UserClusterController_getUserClusterAll",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Cluster"
        ]
      },
      "post": {
        "operationId": "Platform_UserClusterController_CreateUserCluster",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserClusterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Cluster"
        ]
      }
    },
    "/api-system/user/business-unit/{id}": {
      "get": {
        "operationId": "Platform_UserBusinessUnitController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Business Unit"
        ]
      },
      "patch": {
        "operationId": "Platform_UserBusinessUnitController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBusinessUnitUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Business Unit"
        ]
      },
      "delete": {
        "operationId": "Platform_UserBusinessUnitController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Business Unit"
        ]
      }
    },
    "/api-system/user/business-unit": {
      "get": {
        "operationId": "Platform_UserBusinessUnitController_findAll",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Business Unit"
        ]
      },
      "post": {
        "operationId": "Platform_UserBusinessUnitController_create",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserBusinessUnitDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Platform - User Business Unit"
        ]
      }
    },
    "/api/user/profile": {
      "get": {
        "deprecated": false,
        "description": "Get user profile",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get user profile",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/user": {
      "get": {
        "deprecated": false,
        "description": "Get all user in tenant",
        "operationId": "getAllUserInTenant",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all user in tenant",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/business-unit/system-configs": {
      "get": {
        "description": "Get system configs",
        "operationId": "BusinessUnitController_getSystemConfigs",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Config found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get system configs",
        "tags": [
          "Application - business unit",
          "[Method] Get System Configs"
        ]
      }
    },
    "/api/business-unit/configs/{key}": {
      "get": {
        "description": "Find current config by key",
        "operationId": "BusinessUnitController_findConfigByKey",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Config found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Find current config by key",
        "tags": [
          "Application - business unit",
          "[Method] Get"
        ]
      }
    },
    "/api/credit-note/{id}": {
      "get": {
        "operationId": "CreditNoteController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Credit Note"
        ]
      },
      "patch": {
        "operationId": "CreditNoteController_update",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditNoteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Credit Note"
        ]
      },
      "delete": {
        "operationId": "CreditNoteController_delete",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Credit Note"
        ]
      }
    },
    "/api/credit-note": {
      "get": {
        "operationId": "CreditNoteController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Credit Note"
        ]
      },
      "post": {
        "operationId": "CreditNoteController_create",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditNoteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Credit Note"
        ]
      }
    },
    "/api/credit-term": {
      "get": {
        "description": "Get all credit terms",
        "operationId": "CreditTermController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all credit terms",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/credit-term/{id}": {
      "get": {
        "description": "Get a credit term by id",
        "operationId": "CreditTermController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a credit term by id",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/good-received-note/{id}": {
      "get": {
        "operationId": "GoodReceivedNoteController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Good Received Note"
        ]
      },
      "patch": {
        "operationId": "GoodReceivedNoteController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoodReceivedNoteUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Good Received Note"
        ]
      },
      "delete": {
        "operationId": "GoodReceivedNoteController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Good Received Note"
        ]
      }
    },
    "/api/good-received-note": {
      "get": {
        "operationId": "GoodReceivedNoteController_findAll",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Good Received Note"
        ]
      },
      "post": {
        "operationId": "GoodReceivedNoteController_create",
        "parameters": [
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoodReceivedNoteCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Good Received Note"
        ]
      }
    },
    "/api/good-received-note/scan-po/{qr_code}": {
      "get": {
        "deprecated": false,
        "description": "Scan PO",
        "operationId": "scanPO",
        "parameters": [
          {
            "name": "qr_code",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The good received note was successfully retrieved"
          },
          "404": {
            "description": "The good received note was not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Scan PO",
        "tags": [
          "Application - Good Received Note",
          "[Method] Get"
        ]
      }
    },
    "/api/purchase-order/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves a purchase order by its unique identifier",
        "operationId": "findOnePurchaseOrder",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase order was successfully retrieved"
          },
          "404": {
            "description": "The purchase order was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a purchase order by ID",
        "tags": [
          "[Method] Get"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Updates an existing purchase order",
        "operationId": "updatePurchaseOrder",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase order was successfully updated"
          },
          "404": {
            "description": "The purchase order was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a purchase order",
        "tags": [
          "[Method] Update"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing purchase order",
        "operationId": "deletePurchaseOrder",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase order was successfully deleted"
          },
          "404": {
            "description": "The purchase order was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a purchase order",
        "tags": [
          "[Method] Delete"
        ]
      }
    },
    "/api/purchase-order": {
      "get": {
        "deprecated": false,
        "description": "Retrieves all purchase orders",
        "operationId": "findAllPurchaseOrders",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase orders were successfully retrieved"
          },
          "404": {
            "description": "The purchase orders were not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all purchase orders",
        "tags": [
          "[Method] Get"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new purchase order",
        "operationId": "createPurchaseOrder",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The purchase order was successfully created"
          },
          "404": {
            "description": "The purchase order was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a purchase order",
        "tags": [
          "[Method] Post"
        ]
      }
    },
    "/api/purchase-request/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves a purchase request by its unique identifier",
        "operationId": "findOnePurchaseRequest",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase request was successfully retrieved"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a purchase request by ID",
        "tags": [
          "[Method] Get"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing purchase request",
        "operationId": "deletePurchaseRequest",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase request was successfully deleted"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a purchase request",
        "tags": [
          "[Method] Delete"
        ]
      }
    },
    "/api/purchase-request": {
      "get": {
        "deprecated": false,
        "description": "Retrieves all purchase requests",
        "operationId": "findAllPurchaseRequests",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase requests were successfully retrieved"
          },
          "404": {
            "description": "The purchase requests were not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get all purchase requests",
        "tags": [
          "Application - Purchase Request",
          "[Method] Get"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new purchase request",
        "operationId": "createPurchaseRequest",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Purchase request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseRequestDto"
              },
              "examples": {
                "example1": {
                  "value": {
                    "pr_date": "2025-06-13T15:30:00Z",
                    "description": "Purchase request for office supplies",
                    "workflow_id": "0090b76d-e4f4-415c-8a1b-4b4f06fc2ecb",
                    "workflow_obj": {
                      "status": "pending",
                      "assigned_to": "user123"
                    },
                    "workflow_history": [
                      {
                        "status": "draft",
                        "timestamp": "2023-10-01",
                        "user": "user123"
                      },
                      {
                        "status": "pending",
                        "timestamp": "2023-10-02",
                        "user": "user456"
                      }
                    ],
                    "current_workflow_status": "pending",
                    "pr_status": "draft",
                    "requestor_id": "123e4567-e89b-12d3-a456-426614174002",
                    "requestor_name": "John Doe",
                    "department_id": "123e4567-e89b-12d3-a456-426614174003",
                    "department_name": "Procurement",
                    "is_active": true,
                    "doc_version": 1,
                    "note": "Urgent request",
                    "info": {
                      "priority": "high",
                      "budget_code": "BUD-2023-001"
                    },
                    "dimension": {
                      "cost_center": "CC-001",
                      "project": "Project A"
                    },
                    "created_at": "2023-10-01T00:00:00Z",
                    "created_by_id": "123e4567-e89b-12d3-a456-426614174004",
                    "updated_at": "2023-10-02T00:00:00Z",
                    "updated_by_id": "123e4567-e89b-12d3-a456-426614174005",
                    "purchase_request_detail": {
                      "add": [
                        {
                          "location_id": "3ded4758-46f5-4995-bd0b-69f7ef464f92",
                          "location_name": "Warehouse A",
                          "product_id": "0f9955f0-2f5b-437d-a787-7c79a043da38",
                          "product_name": "Laptop",
                          "vendor_id": "82756e45-6354-4a6f-b3ee-c0b0a4ec6e61",
                          "vendor_name": "Vendor A",
                          "price_list_id": "1c5b5aa8-e1b4-4071-9de4-3c8a6dc56178",
                          "description": "High-performance laptop",
                          "requested_qty": 5,
                          "requested_unit_id": "4b84205f-5102-41fa-8a18-42b687a7956e",
                          "requested_unit_name": "Piece",
                          "approved_qty": 5,
                          "approved_unit_id": "ea321636-59f5-4a9e-b6c0-42024156993e",
                          "approved_unit_name": "Piece",
                          "currency_id": "01e9b558-3c17-42b0-b95d-2aece05ebd29",
                          "exchange_rate": 1,
                          "exchange_rate_date": "2023-10-01T00:00:00Z",
                          "price": 1000,
                          "total_price": 5000,
                          "foc": 12,
                          "foc_unit_id": "ea321636-59f5-4a9e-b6c0-42024156993e",
                          "foc_unit_name": "Piece",
                          "tax_profile_id": "01e9b558-3c17-42b0-b95d-2aece05ebd29",
                          "tax_profile_name": "VAT 7%",
                          "tax_rate": 7,
                          "tax_amount": 350,
                          "is_tax_adjustment": false,
                          "is_discount": false,
                          "discount_rate": 0,
                          "discount_amount": 0,
                          "is_discount_adjustment": false,
                          "is_active": true,
                          "note": "Approved",
                          "info": {
                            "specifications": "16GB RAM, 512GB SSD"
                          },
                          "dimension": {
                            "cost_center": "CC-001",
                            "project": "Project A"
                          }
                        }
                      ]
                    }
                  },
                  "summary": "Sample purchase request"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The purchase request was successfully created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Create a purchase request",
        "tags": [
          "Application - Purchase Request",
          "[Method] Post"
        ]
      }
    },
    "/api/purchase-request/status/{status}": {
      "get": {
        "description": "Retrieves the approval status of a purchase request",
        "operationId": "PurchaseRequestController_findAllByStatus",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get approval status of a purchase request",
        "tags": [
          "Application - Purchase Request"
        ]
      }
    },
    "/api/purchase-request/{id}/submit": {
      "patch": {
        "description": "Submits an existing purchase request",
        "operationId": "PurchaseRequestController_submit",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit a purchase request",
        "tags": [
          "Application - Purchase Request"
        ]
      }
    },
    "/api/purchase-request/{id}/approve": {
      "patch": {
        "description": "Submits an existing purchase request",
        "operationId": "PurchaseRequestController_approve",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit a purchase request",
        "tags": [
          "Application - Purchase Request"
        ]
      }
    },
    "/api/purchase-request/{id}/reject": {
      "patch": {
        "description": "Submits an existing purchase request",
        "operationId": "PurchaseRequestController_reject",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit a purchase request",
        "tags": [
          "Application - Purchase Request"
        ]
      }
    },
    "/api/purchase-request/{id}/review": {
      "patch": {
        "description": "Review an existing purchase request",
        "operationId": "PurchaseRequestController_review",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Review a purchase request",
        "tags": [
          "Application - Purchase Request"
        ]
      }
    },
    "/api/purchase-request/{id}/save": {
      "patch": {
        "deprecated": false,
        "description": "Updates an existing purchase request",
        "operationId": "updatePurchaseRequest",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The purchase request was successfully updated"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a purchase request",
        "tags": [
          "[Method] Update"
        ]
      }
    },
    "/api/store-requisition/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves a store requisition by its unique identifier",
        "operationId": "findOneStoreRequisition",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The store requisition was successfully retrieved"
          },
          "404": {
            "description": "The store requisition was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a store requisition by ID",
        "tags": [
          "[Method] Get"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Updates an existing store requisition",
        "operationId": "updateStoreRequisition",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The store requisition was successfully updated"
          },
          "404": {
            "description": "The store requisition was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a store requisition",
        "tags": [
          "[Method] Update"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing store requisition",
        "operationId": "deleteStoreRequisition",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The store requisition was successfully deleted"
          },
          "404": {
            "description": "The store requisition was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete a store requisition",
        "tags": [
          "[Method] Delete"
        ]
      }
    },
    "/api/store-requisition": {
      "get": {
        "deprecated": false,
        "description": "Retrieves all store requisitions",
        "operationId": "findAllStoreRequisitions",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The store requisitions were successfully retrieved"
          },
          "404": {
            "description": "The store requisitions were not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all store requisitions",
        "tags": [
          "[Method] Get"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new store requisition",
        "operationId": "createStoreRequisition",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The store requisition was successfully created"
          },
          "404": {
            "description": "The store requisition was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create a store requisition",
        "tags": [
          "[Method] Post"
        ]
      }
    },
    "/api/products/locations/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves all products by location id",
        "operationId": "findAllProductsByLocationId",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The products were successfully retrieved"
          },
          "404": {
            "description": "The products were not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all products by location id",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/locations": {
      "get": {
        "deprecated": false,
        "description": "Retrieves locations using user ID that acquired from JWT token and location must be active",
        "operationId": "findAllByUserId",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "locations was successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "address": {
                        "type": "string"
                      },
                      "is_active": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get locations by user ID",
        "tags": [
          "Application - Location"
        ]
      }
    },
    "/api/locations/{id}": {
      "get": {
        "description": "Retrieves a location by ID",
        "operationId": "LocationsController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withUser",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "withProducts",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get location by ID",
        "tags": [
          "Application - Location"
        ]
      }
    },
    "/api/locations/{location_id}/product/{product_id}/inventory": {
      "get": {
        "deprecated": false,
        "description": "Retrieves a product inventory by location ID and product ID",
        "operationId": "getProductInventory",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product inventory was successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "on_hand_qty": {
                      "type": "number"
                    },
                    "on_order_qty": {
                      "type": "number"
                    },
                    "re_order_qty": {
                      "type": "number"
                    },
                    "re_stock_qty": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get product inventory by location ID and product ID",
        "tags": [
          "Application - Location"
        ]
      }
    },
    "/api/workflow/type/{type}": {
      "get": {
        "operationId": "WorkflowController_findByType",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get all workflow types",
        "tags": [
          "Application - Workflow"
        ]
      }
    },
    "/api/department": {
      "get": {
        "description": "Get all departments",
        "operationId": "DepartmentController_getDepartments",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all departments",
        "tags": [
          "Application - Department"
        ]
      }
    },
    "/api/department/{id}": {
      "get": {
        "description": "Get a department by id",
        "operationId": "DepartmentController_getDepartment",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a department by id",
        "tags": [
          "Application - Department"
        ]
      }
    },
    "/api/user-location": {
      "get": {
        "operationId": "UserLocationController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Type Inventory"
        ]
      }
    },
    "/api/tax-profile/{id}": {
      "get": {
        "operationId": "TaxProfileController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      }
    },
    "/api/tax-profile": {
      "get": {
        "description": "Get all tax type inventories",
        "operationId": "TaxProfileController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get all tax type inventories",
        "tags": [
          "Config - Tax Profile"
        ]
      }
    },
    "/api/purchase-request-template": {
      "get": {
        "operationId": "PurchaseRequestTemplateController_getPurchaseRequestTemplate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Purchase Request Template"
        ]
      },
      "post": {
        "operationId": "PurchaseRequestTemplateController_createPurchaseRequestTemplate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseRequestTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Purchase Request Template"
        ]
      }
    },
    "/api/purchase-request-template/{id}": {
      "get": {
        "operationId": "PurchaseRequestTemplateController_getPurchaseRequestTemplateById",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Purchase Request Template"
        ]
      },
      "put": {
        "operationId": "PurchaseRequestTemplateController_updatePurchaseRequestTemplate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseRequestTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Purchase Request Template"
        ]
      },
      "delete": {
        "operationId": "PurchaseRequestTemplateController_deletePurchaseRequestTemplate",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Application - Purchase Request Template"
        ]
      }
    },
    "/api/currencies": {
      "get": {
        "description": "Get all active currencies",
        "operationId": "CurrenciesController_findAllActive",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all active currencies",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/currencies/iso": {
      "get": {
        "description": "Get all ISO currencies",
        "operationId": "CurrenciesController_findAllISO",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all ISO currencies",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/currencies/{id}": {
      "get": {
        "description": "Retrieve a currency by its unique identifier",
        "operationId": "CurrenciesController_findOne",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a currency by ID",
        "tags": [
          "[Method] Get"
        ]
      }
    },
    "/api/price-list/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves price list by ID",
        "operationId": "findOnePriceList",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price list was successfully retrieved"
          },
          "404": {
            "description": "Price list was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get price list by ID",
        "tags": [
          "Application - Price List",
          "[Method] Get"
        ]
      }
    },
    "/api/price-list": {
      "get": {
        "deprecated": false,
        "description": "Retrieves price list using user ID that acquired from JWT token and price list must be active",
        "operationId": "findAllByUserId",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Price list was successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "vendor_id": {
                        "type": "string"
                      },
                      "vendor_name": {
                        "type": "string"
                      },
                      "product_id": {
                        "type": "string"
                      },
                      "product_name": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "price_with_vat": {
                        "type": "number"
                      },
                      "price_without_vat": {
                        "type": "number"
                      },
                      "from_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "to_date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get price list by user ID",
        "tags": [
          "Application - Price List"
        ]
      }
    },
    "/api/credit-note-reason": {
      "get": {
        "operationId": "CreditNoteReasonController_findAll",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perpage",
            "required": false,
            "in": "query",
            "description": "Perpage",
            "schema": {
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search",
            "schema": {
              "default": "",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Filter",
            "schema": {
              "default": [],
              "type": "record<string, string>"
            }
          },
          {
            "name": "searchfields",
            "required": false,
            "in": "query",
            "description": "searchfields",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "sort",
            "schema": {
              "default": [],
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "CreditNoteReason"
        ]
      }
    },
    "/api/unit/order/product/{productId}": {
      "get": {
        "operationId": "UnitConversionController_getOrderUnitProduct",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      }
    },
    "/api/unit/ingredient/product/{productId}": {
      "get": {
        "operationId": "UnitConversionController_getIngredientUnitProduct",
        "parameters": [
          {
            "name": "x-tenant-id",
            "in": "header",
            "description": "Tenant ID",
            "required": true,
            "examples": {
              "Example for backend development": {
                "value": "b2ac1375-cd8b-4b39-91f2-7548c100534e",
                "summary": "Tenant ID for backend development"
              },
              "Example for frontend development": {
                "value": "ec7792a9-d88a-4454-ae05-6cea81cf89fd",
                "summary": "Tenant ID for frontend development"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Config - Tax Profile"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves a store requisition by its ID",
        "operationId": "findStoreRequisitionById",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The store requisition was successfully retrieved"
          },
          "404": {
            "description": "The store requisition was not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get a store requisition by ID",
        "tags": [
          "Application - Store Requisition",
          "[Method] Get"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing store requisition",
        "operationId": "deleteStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Delete a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Delete"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves all store requisitions",
        "operationId": "findAllStoreRequisitions",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The store requisitions were successfully retrieved"
          },
          "404": {
            "description": "The store requisitions were not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get all store requisitions",
        "tags": [
          "Application - Store Requisition",
          "[Method] Get"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new store requisition",
        "operationId": "createStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Create a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Post"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/{id}/save": {
      "patch": {
        "deprecated": false,
        "description": "Updates an existing store requisition",
        "operationId": "updateStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Update a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Patch"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/{id}/submit": {
      "patch": {
        "deprecated": false,
        "description": "Submits an existing store requisition",
        "operationId": "submitStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Submit a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Patch"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/{id}/approve": {
      "patch": {
        "deprecated": false,
        "description": "Approves an existing store requisition",
        "operationId": "approveStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Approve a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Patch"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/{id}/reject": {
      "patch": {
        "deprecated": false,
        "description": "Rejects an existing store requisition",
        "operationId": "rejectStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Reject a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Patch"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/{id}/review": {
      "patch": {
        "deprecated": false,
        "description": "Reviews an existing store requisition",
        "operationId": "reviewStoreRequisition",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Review a store requisition",
        "tags": [
          "Application - Store Requisition",
          "[Method] Patch"
        ]
      }
    },
    "/api/my-pending/store-requisition/{tenant_id}/status/{status}": {
      "get": {
        "description": "Retrieves all store requisitions by status",
        "operationId": "MyPendingStoreRequisitionController_findAllByStatus",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get all store requisitions by status",
        "tags": [
          "Application - My Pending"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/{id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves a purchase request by its unique identifier",
        "operationId": "findOnePurchaseRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase request was successfully retrieved"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get a purchase request by ID",
        "tags": [
          "[Method] Get"
        ]
      },
      "delete": {
        "deprecated": false,
        "description": "Deletes an existing purchase request",
        "operationId": "deletePurchaseRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase request was successfully deleted"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a purchase request",
        "tags": [
          "[Method] Delete"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}": {
      "get": {
        "deprecated": false,
        "description": "Retrieves all purchase requests",
        "operationId": "findAllPurchaseRequests",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The purchase requests were successfully retrieved",
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": [
                      {
                        "id": 1,
                        "number": "PR-2001",
                        "status": "In-progress",
                        "workflowStage": 1,
                        "requestor": "Alice Lee",
                        "department": "F&B",
                        "date": "2024-06-01",
                        "value": "S$1,200.00",
                        "business_unit": "Grand Hotel Singapore",
                        "role": "HOD",
                        "lastAction": "Submitted for HOD Review (2024-06-01)",
                        "prType": "General",
                        "currency": "SGD",
                        "exchangeRate": 0.74,
                        "baseCurrency": "USD",
                        "baseValue": "$888.00"
                      },
                      {
                        "id": 2,
                        "number": "PR-2002",
                        "status": "Converted",
                        "workflowStage": 4,
                        "requestor": "Bob Tan",
                        "department": "Housekeeping",
                        "date": "2024-06-02",
                        "value": "Rp 12,000,000",
                        "business_unit": "Business Hotel Jakarta",
                        "role": "Purchasing",
                        "prType": "Market List",
                        "currency": "IDR",
                        "exchangeRate": 0.000067,
                        "baseCurrency": "USD",
                        "baseValue": "$800.00"
                      },
                      {
                        "id": 3,
                        "number": "PR-2003",
                        "status": "In-progress",
                        "workflowStage": 2,
                        "requestor": "Charlie Lim",
                        "department": "Engineering",
                        "date": "2024-06-03",
                        "value": "฿21,000.00",
                        "business_unit": "Boutique Hotel Bangkok",
                        "role": "Finance",
                        "lastAction": "Approved by HOD, submitted for Finance Review (2024-06-03)",
                        "prType": "General",
                        "currency": "THB",
                        "exchangeRate": 0.029,
                        "baseCurrency": "USD",
                        "baseValue": "$600.00"
                      },
                      {
                        "id": 9,
                        "number": "PR-2009",
                        "status": "In-progress",
                        "workflowStage": 3,
                        "requestor": "Ivy Chen",
                        "department": "IT",
                        "date": "2024-06-09",
                        "value": "S$3,375.00",
                        "business_unit": "Grand Hotel Singapore",
                        "role": "Purchasing",
                        "prType": "Market List",
                        "currency": "SGD",
                        "exchangeRate": 0.74,
                        "baseCurrency": "USD",
                        "baseValue": "$2,500.00"
                      },
                      {
                        "id": 4,
                        "number": "PR-2004",
                        "status": "Cancelled",
                        "workflowStage": -3,
                        "requestor": "Diana Ong",
                        "department": "F&B",
                        "date": "2024-06-04",
                        "value": "$900.00",
                        "business_unit": "Grand Hotel Singapore",
                        "role": "HOD",
                        "prType": "General",
                        "currency": "USD",
                        "exchangeRate": 1,
                        "baseCurrency": "USD",
                        "baseValue": "$900.00"
                      },
                      {
                        "id": 5,
                        "number": "PR-2005",
                        "status": "Draft",
                        "workflowStage": 0,
                        "requestor": "Eddie Goh",
                        "department": "Front Office",
                        "date": "2024-06-05",
                        "value": "Rp 6,750,000",
                        "business_unit": "Business Hotel Jakarta",
                        "role": "Requestor",
                        "prType": "Market List",
                        "currency": "IDR",
                        "exchangeRate": 0.000067,
                        "baseCurrency": "USD",
                        "baseValue": "$450.00"
                      },
                      {
                        "id": 6,
                        "number": "PR-2006",
                        "status": "Rejected",
                        "workflowStage": -1,
                        "requestor": "Fiona Chua",
                        "department": "Housekeeping",
                        "date": "2024-06-06",
                        "value": "฿38,500.00",
                        "business_unit": "Boutique Hotel Bangkok",
                        "role": "Finance",
                        "prType": "General",
                        "currency": "THB",
                        "exchangeRate": 0.029,
                        "baseCurrency": "USD",
                        "baseValue": "$1,100.00"
                      },
                      {
                        "id": 7,
                        "number": "PR-2007",
                        "status": "In-progress",
                        "workflowStage": 1,
                        "requestor": "George Tan",
                        "department": "F&B",
                        "date": "2024-06-07",
                        "value": "S$2,700.00",
                        "business_unit": "Grand Hotel Singapore",
                        "role": "HOD",
                        "prType": "Market List",
                        "currency": "SGD",
                        "exchangeRate": 0.74,
                        "baseCurrency": "USD",
                        "baseValue": "$2,000.00"
                      },
                      {
                        "id": 8,
                        "number": "PR-2008",
                        "status": "Converted",
                        "workflowStage": 4,
                        "requestor": "Helen Lee",
                        "department": "Engineering",
                        "date": "2024-06-08",
                        "value": "Rp 10,500,000",
                        "business_unit": "Business Hotel Jakarta",
                        "role": "Purchasing",
                        "prType": "General",
                        "currency": "IDR",
                        "exchangeRate": 0.000067,
                        "baseCurrency": "USD",
                        "baseValue": "$700.00"
                      },
                      {
                        "id": 10,
                        "number": "PR-2010",
                        "status": "Returned",
                        "workflowStage": 1,
                        "requestor": "John Smith",
                        "department": "Kitchen",
                        "date": "2024-06-10",
                        "value": "$350.00",
                        "business_unit": "Grand Hotel Singapore",
                        "role": "HOD",
                        "lastAction": "Returned by Finance for additional information (2024-06-10)",
                        "prType": "General",
                        "currency": "USD",
                        "exchangeRate": 1,
                        "baseCurrency": "USD",
                        "baseValue": "$350.00"
                      },
                      {
                        "id": 11,
                        "number": "PR-2011",
                        "status": "In-progress",
                        "workflowStage": 2,
                        "requestor": "Sarah Wilson",
                        "department": "Housekeeping",
                        "date": "2024-06-11",
                        "value": "Rp 11,250,000",
                        "business_unit": "Business Hotel Jakarta",
                        "role": "Finance",
                        "prType": "Market List",
                        "currency": "IDR",
                        "exchangeRate": 0.000067,
                        "baseCurrency": "USD",
                        "baseValue": "$750.00"
                      },
                      {
                        "id": 12,
                        "number": "PR-2012",
                        "status": "Completed",
                        "workflowStage": 4,
                        "requestor": "Mike Johnson",
                        "department": "Maintenance",
                        "date": "2024-06-12",
                        "value": "฿33,250.00",
                        "business_unit": "Boutique Hotel Bangkok",
                        "role": "Purchasing",
                        "prType": "General",
                        "currency": "THB",
                        "exchangeRate": 0.029,
                        "baseCurrency": "USD",
                        "baseValue": "$950.00"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "The purchase requests were not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Get all purchase requests",
        "tags": [
          "Application - My Pending Purchase Request",
          "[Method] Get"
        ]
      },
      "post": {
        "deprecated": false,
        "description": "Creates a new purchase request",
        "operationId": "createPurchaseRequest",
        "parameters": [
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Purchase request data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePurchaseRequestDto"
              },
              "examples": {
                "example1": {
                  "value": {
                    "pr_date": "2025-06-13T15:30:00Z",
                    "description": "Purchase request for office supplies",
                    "workflow_id": "0090b76d-e4f4-415c-8a1b-4b4f06fc2ecb",
                    "workflow_obj": {
                      "status": "pending",
                      "assigned_to": "user123"
                    },
                    "workflow_history": [
                      {
                        "status": "draft",
                        "timestamp": "2023-10-01",
                        "user": "user123"
                      },
                      {
                        "status": "pending",
                        "timestamp": "2023-10-02",
                        "user": "user456"
                      }
                    ],
                    "current_workflow_status": "pending",
                    "pr_status": "draft",
                    "requestor_id": "123e4567-e89b-12d3-a456-426614174002",
                    "requestor_name": "John Doe",
                    "department_id": "123e4567-e89b-12d3-a456-426614174003",
                    "department_name": "Procurement",
                    "is_active": true,
                    "doc_version": 1,
                    "note": "Urgent request",
                    "info": {
                      "priority": "high",
                      "budget_code": "BUD-2023-001"
                    },
                    "dimension": {
                      "cost_center": "CC-001",
                      "project": "Project A"
                    },
                    "created_at": "2023-10-01T00:00:00Z",
                    "created_by_id": "123e4567-e89b-12d3-a456-426614174004",
                    "updated_at": "2023-10-02T00:00:00Z",
                    "updated_by_id": "123e4567-e89b-12d3-a456-426614174005",
                    "purchase_request_detail": {
                      "add": [
                        {
                          "location_id": "3ded4758-46f5-4995-bd0b-69f7ef464f92",
                          "location_name": "Warehouse A",
                          "product_id": "0f9955f0-2f5b-437d-a787-7c79a043da38",
                          "product_name": "Laptop",
                          "vendor_id": "82756e45-6354-4a6f-b3ee-c0b0a4ec6e61",
                          "vendor_name": "Vendor A",
                          "price_list_id": "1c5b5aa8-e1b4-4071-9de4-3c8a6dc56178",
                          "description": "High-performance laptop",
                          "requested_qty": 5,
                          "requested_unit_id": "4b84205f-5102-41fa-8a18-42b687a7956e",
                          "requested_unit_name": "Piece",
                          "approved_qty": 5,
                          "approved_unit_id": "ea321636-59f5-4a9e-b6c0-42024156993e",
                          "approved_unit_name": "Piece",
                          "currency_id": "01e9b558-3c17-42b0-b95d-2aece05ebd29",
                          "exchange_rate": 1,
                          "exchange_rate_date": "2023-10-01T00:00:00Z",
                          "price": 1000,
                          "total_price": 5000,
                          "foc": 12,
                          "foc_unit_id": "ea321636-59f5-4a9e-b6c0-42024156993e",
                          "foc_unit_name": "Piece",
                          "tax_profile_id": "01e9b558-3c17-42b0-b95d-2aece05ebd29",
                          "tax_profile_name": "VAT 7%",
                          "tax_rate": 7,
                          "tax_amount": 350,
                          "is_tax_adjustment": false,
                          "is_discount": false,
                          "discount_rate": 0,
                          "discount_amount": 0,
                          "is_discount_adjustment": false,
                          "is_active": true,
                          "note": "Approved",
                          "info": {
                            "specifications": "16GB RAM, 512GB SSD"
                          },
                          "dimension": {
                            "cost_center": "CC-001",
                            "project": "Project A"
                          }
                        }
                      ]
                    }
                  },
                  "summary": "Sample purchase request"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The purchase request was successfully created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "bearer": []
          }
        ],
        "summary": "Create a purchase request",
        "tags": [
          "Application - My Pending Purchase Request",
          "[Method] Post"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/status/{status}": {
      "get": {
        "description": "Retrieves the approval status of a purchase request",
        "operationId": "MyPendingPurchaseRequestController_findAllByStatus",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get approval status of a purchase request",
        "tags": [
          "Application - My Pending"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/{id}/submit": {
      "patch": {
        "description": "Submits an existing purchase request",
        "operationId": "MyPendingPurchaseRequestController_submit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit a purchase request",
        "tags": [
          "Application - My Pending"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/{id}/approve": {
      "patch": {
        "description": "Submits an existing purchase request",
        "operationId": "MyPendingPurchaseRequestController_approve",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit a purchase request",
        "tags": [
          "Application - My Pending"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/{id}/reject": {
      "patch": {
        "description": "Submits an existing purchase request",
        "operationId": "MyPendingPurchaseRequestController_reject",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Submit a purchase request",
        "tags": [
          "Application - My Pending"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/{id}/review": {
      "patch": {
        "description": "Review an existing purchase request",
        "operationId": "MyPendingPurchaseRequestController_review",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Review a purchase request",
        "tags": [
          "Application - My Pending"
        ]
      }
    },
    "/api/my-pending/purchase-request/{tenant_id}/{id}/save": {
      "patch": {
        "deprecated": false,
        "description": "Updates an existing purchase request",
        "operationId": "updatePurchaseRequest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tenant_id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "required": false,
            "in": "query",
            "description": "Version",
            "schema": {
              "default": "latest",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePurchaseRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The purchase request was successfully updated"
          },
          "404": {
            "description": "The purchase request was not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update a purchase request",
        "tags": [
          "[Method] Update"
        ]
      }
    }
  },
  "info": {
    "title": "CarmenSoftware",
    "description": "CarmenSoftware API Gateway",
    "version": "1.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "local environment"
    },
    {
      "url": "https://localhost:4001",
      "description": "local environment (https)"
    },
    {
      "url": "https://dev.blueledgers.com:4001",
      "description": "dev environment"
    },
    {
      "url": "https://carmen-api.semapru.com",
      "description": "production environment"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "in": "header"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "InviteUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "RegisterConfirmDto": {
        "type": "object",
        "properties": {
          "email_token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "user_info": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string"
              },
              "middle_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              }
            },
            "required": [
              "first_name",
              "last_name"
            ]
          }
        },
        "required": [
          "email_token",
          "password",
          "user_info"
        ]
      },
      "CurrenciesCreateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "exchange_rate": {
            "type": "number",
            "default": 1,
            "nullable": true
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "CurrenciesUpdateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "exchange_rate": {
            "type": "number"
          }
        }
      },
      "DeliveryPointCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "DeliveryPointUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "DepartmentsCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "users": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "isHod": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "isHod"
                  ]
                }
              }
            },
            "required": [
              "add"
            ]
          }
        },
        "required": [
          "name"
        ]
      },
      "DepartmentsUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "users": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "isHod": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "id",
                    "isHod"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        }
      },
      "ExchangeRateCreateDto": {
        "type": "object",
        "properties": {
          "at_date": {
            "oneOf": [
              {},
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "exchange_rate": {
            "type": "number",
            "nullable": true
          },
          "currency_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "currency_id"
        ]
      },
      "ExchangeRateUpdateDto": {
        "type": "object",
        "properties": {
          "at_date": {
            "oneOf": [
              {},
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "exchange_rate": {
            "type": "number",
            "nullable": true
          },
          "currency_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LocationCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "location_type": {
            "type": "string",
            "enum": [
              "inventory",
              "direct",
              "consignment"
            ]
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "delivery_point_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "info": {
            "type": "object",
            "properties": {
              "floor": {
                "type": "number"
              },
              "building": {
                "type": "string"
              },
              "capacity": {
                "type": "number"
              },
              "responsibleDepartment": {
                "type": "string"
              },
              "itemCount": {
                "type": "number"
              },
              "lastCount": {
                "type": "string"
              }
            }
          },
          "users": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "products": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "name",
          "location_type"
        ]
      },
      "LocationUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "location_type": {
            "type": "string",
            "enum": [
              "inventory",
              "direct",
              "consignment"
            ]
          },
          "delivery_point_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "info": {
            "type": "object",
            "properties": {
              "floor": {
                "type": "number"
              },
              "building": {
                "type": "string"
              },
              "capacity": {
                "type": "number"
              },
              "responsibleDepartment": {
                "type": "string"
              },
              "itemCount": {
                "type": "number"
              },
              "lastCount": {
                "type": "string"
              }
            }
          },
          "users": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "products": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        }
      },
      "PriceListCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "from_date": {},
          "to_date": {},
          "id_active": {
            "type": "boolean",
            "default": true
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "nullable": true
          },
          "dimension": {
            "nullable": true
          }
        },
        "required": [
          "name",
          "from_date",
          "to_date",
          "note",
          "info",
          "dimension"
        ]
      },
      "PriceListUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "pricelist_no": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "from_date": {},
          "to_date": {},
          "id_active": {
            "type": "boolean",
            "default": true
          },
          "doc_version": {
            "type": "number",
            "default": 0
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "nullable": true
          },
          "dimension": {
            "nullable": true
          }
        }
      },
      "ProductCategoryCreateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "price_deviation_limit": {
            "type": "number"
          },
          "qty_deviation_limit": {
            "type": "number"
          },
          "is_used_in_recipe": {
            "type": "boolean",
            "default": true
          },
          "is_sold_directly": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "ProductCategoryUpdateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "price_deviation_limit": {
            "type": "number"
          },
          "qty_deviation_limit": {
            "type": "number"
          },
          "is_used_in_recipe": {
            "type": "boolean"
          },
          "is_sold_directly": {
            "type": "boolean"
          }
        }
      },
      "ProductItemGroupCreateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price_deviation_limit": {
            "type": "number"
          },
          "qty_deviation_limit": {
            "type": "number"
          },
          "is_used_in_recipe": {
            "type": "boolean",
            "default": true
          },
          "is_used_in_purchase_order": {
            "type": "boolean",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "product_subcategory_id": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "name",
          "product_subcategory_id"
        ]
      },
      "ProductItemGroupUpdateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price_deviation_limit": {
            "type": "number"
          },
          "qty_deviation_limit": {
            "type": "number"
          },
          "is_used_in_recipe": {
            "type": "boolean"
          },
          "is_used_in_purchase_order": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "product_subcategory_id": {
            "type": "string"
          }
        }
      },
      "ProductSubCategoryCreateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price_deviation_limit": {
            "type": "number"
          },
          "qty_deviation_limit": {
            "type": "number"
          },
          "is_used_in_recipe": {
            "type": "boolean",
            "default": true
          },
          "is_sold_directly": {
            "type": "boolean",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "product_category_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "code",
          "name",
          "product_category_id"
        ]
      },
      "ProductSubCategoryUpdateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price_deviation_limit": {
            "type": "number"
          },
          "qty_deviation_limit": {
            "type": "number"
          },
          "is_used_in_recipe": {
            "type": "boolean"
          },
          "is_sold_directly": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          },
          "product_category_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ProductCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "local_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "inventory_unit_id": {
            "type": "string"
          },
          "product_status_type": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "x-enumNames": [
              "active",
              "inactive"
            ]
          },
          "product_info": {
            "type": "object",
            "properties": {
              "product_item_group_id": {
                "type": "string"
              },
              "is_used_in_recipe": {
                "type": "boolean",
                "default": true
              },
              "is_sold_directly": {
                "type": "boolean",
                "default": false
              },
              "barcode": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "price_deviation_limit": {
                "type": "number"
              },
              "qty_deviation_limit": {
                "type": "number"
              },
              "info": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "data_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "date",
                        "datetime",
                        "number",
                        "boolean",
                        "dataset",
                        "lookup",
                        "object",
                        "array"
                      ],
                      "x-enumNames": [
                        "string",
                        "date",
                        "datetime",
                        "number",
                        "boolean",
                        "dataset",
                        "lookup",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "required": [
                    "label",
                    "value"
                  ]
                }
              }
            }
          },
          "locations": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "location_id"
                  ]
                }
              }
            }
          },
          "order_units": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "from_unit_id": {
                      "type": "string"
                    },
                    "from_unit_qty": {
                      "type": "number"
                    },
                    "to_unit_id": {
                      "type": "string"
                    },
                    "to_unit_qty": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean",
                      "default": false
                    },
                    "is_active": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "required": [
                    "from_unit_id",
                    "from_unit_qty",
                    "to_unit_id",
                    "to_unit_qty"
                  ]
                }
              }
            }
          },
          "ingredient_units": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "from_unit_id": {
                      "type": "string"
                    },
                    "from_unit_qty": {
                      "type": "number"
                    },
                    "to_unit_id": {
                      "type": "string"
                    },
                    "to_unit_qty": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean",
                      "default": false
                    },
                    "is_active": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "required": [
                    "from_unit_id",
                    "from_unit_qty",
                    "to_unit_id",
                    "to_unit_qty"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "name",
          "code",
          "inventory_unit_id",
          "product_status_type"
        ]
      },
      "ProductUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "local_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "inventory_unit_id": {
            "type": "string"
          },
          "product_status_type": {
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "x-enumNames": [
              "active",
              "inactive"
            ]
          },
          "product_info": {
            "type": "object",
            "properties": {
              "product_item_group_id": {
                "type": "string"
              },
              "is_used_in_recipe": {
                "type": "boolean"
              },
              "is_sold_directly": {
                "type": "boolean"
              },
              "barcode": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              },
              "price_deviation_limit": {
                "type": "number"
              },
              "qty_deviation_limit": {
                "type": "number"
              },
              "info": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "data_type": {
                      "type": "string",
                      "enum": [
                        "string",
                        "date",
                        "datetime",
                        "number",
                        "boolean",
                        "dataset",
                        "lookup",
                        "object",
                        "array"
                      ],
                      "x-enumNames": [
                        "string",
                        "date",
                        "datetime",
                        "number",
                        "boolean",
                        "dataset",
                        "lookup",
                        "object",
                        "array"
                      ]
                    }
                  }
                }
              }
            }
          },
          "locations": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "location_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "location_id"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "product_location_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "product_location_id"
                  ]
                }
              }
            }
          },
          "order_units": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "from_unit_id": {
                      "type": "string"
                    },
                    "from_unit_qty": {
                      "type": "number"
                    },
                    "to_unit_id": {
                      "type": "string"
                    },
                    "to_unit_qty": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean",
                      "default": false
                    },
                    "is_active": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "required": [
                    "from_unit_id",
                    "from_unit_qty",
                    "to_unit_id",
                    "to_unit_qty"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "product_order_unit_id": {
                      "type": "string"
                    },
                    "from_unit_id": {
                      "type": "string"
                    },
                    "from_unit_qty": {
                      "type": "number"
                    },
                    "to_unit_id": {
                      "type": "string"
                    },
                    "to_unit_qty": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "is_active": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "product_order_unit_id",
                    "from_unit_id",
                    "from_unit_qty",
                    "to_unit_id",
                    "to_unit_qty"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "product_order_unit_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "product_order_unit_id"
                  ]
                }
              }
            }
          },
          "ingredient_units": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "from_unit_id": {
                      "type": "string"
                    },
                    "from_unit_qty": {
                      "type": "number"
                    },
                    "to_unit_id": {
                      "type": "string"
                    },
                    "to_unit_qty": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean",
                      "default": false
                    },
                    "is_active": {
                      "type": "boolean",
                      "default": true
                    }
                  },
                  "required": [
                    "from_unit_id",
                    "from_unit_qty",
                    "to_unit_id",
                    "to_unit_qty"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "product_ingredient_unit_id": {
                      "type": "string"
                    },
                    "from_unit_id": {
                      "type": "string"
                    },
                    "from_unit_qty": {
                      "type": "number"
                    },
                    "to_unit_id": {
                      "type": "string"
                    },
                    "to_unit_qty": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "is_default": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "product_ingredient_unit_id",
                    "from_unit_id",
                    "from_unit_qty",
                    "to_unit_id",
                    "to_unit_qty"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "product_ingredient_unit_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "product_ingredient_unit_id"
                  ]
                }
              }
            }
          }
        }
      },
      "UnitsCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "UnitsUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "VendorCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "info": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "data_type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ],
                  "x-enumNames": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ]
                }
              },
              "required": [
                "label",
                "value"
              ]
            }
          },
          "vendor_address": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "address_type": {
                  "type": "string",
                  "enum": [
                    "contact_address",
                    "mailing_address",
                    "register_address"
                  ]
                },
                "data": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "vendor_contact": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "contact_type": {
                  "type": "string",
                  "enum": [
                    "phone_number",
                    "email_address"
                  ],
                  "x-enumNames": [
                    "phone_number",
                    "email_address"
                  ]
                },
                "description": {
                  "type": "string"
                },
                "info": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      },
                      "data_type": {
                        "type": "string",
                        "enum": [
                          "string",
                          "date",
                          "datetime",
                          "number",
                          "boolean",
                          "dataset",
                          "lookup",
                          "object",
                          "array"
                        ],
                        "x-enumNames": [
                          "string",
                          "date",
                          "datetime",
                          "number",
                          "boolean",
                          "dataset",
                          "lookup",
                          "object",
                          "array"
                        ]
                      }
                    },
                    "required": [
                      "label",
                      "value"
                    ]
                  }
                }
              },
              "required": [
                "contact_type"
              ]
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "VendorUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "info": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "data_type": {
                  "type": "string",
                  "enum": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ],
                  "x-enumNames": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ]
                }
              },
              "required": [
                "label",
                "value"
              ]
            }
          },
          "vendor_address": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address_type": {
                      "type": "string",
                      "enum": [
                        "contact_address",
                        "mailing_address",
                        "register_address"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vendor_address_id": {
                      "type": "string"
                    },
                    "address_type": {
                      "type": "string",
                      "enum": [
                        "contact_address",
                        "mailing_address",
                        "register_address"
                      ]
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "required": [
                    "vendor_address_id"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vendor_address_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "vendor_address_id"
                  ]
                }
              }
            }
          },
          "vendor_contact": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "contact_type": {
                      "type": "string",
                      "enum": [
                        "phone_number",
                        "email_address"
                      ],
                      "x-enumNames": [
                        "phone_number",
                        "email_address"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "data_type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "date",
                              "datetime",
                              "number",
                              "boolean",
                              "dataset",
                              "lookup",
                              "object",
                              "array"
                            ],
                            "x-enumNames": [
                              "string",
                              "date",
                              "datetime",
                              "number",
                              "boolean",
                              "dataset",
                              "lookup",
                              "object",
                              "array"
                            ]
                          }
                        },
                        "required": [
                          "label",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "contact_type"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vendor_contact_id": {
                      "type": "string"
                    },
                    "contact_type": {
                      "type": "string",
                      "enum": [
                        "phone_number",
                        "email_address"
                      ],
                      "x-enumNames": [
                        "phone_number",
                        "email_address"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "info": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "data_type": {
                            "type": "string",
                            "enum": [
                              "string",
                              "date",
                              "datetime",
                              "number",
                              "boolean",
                              "dataset",
                              "lookup",
                              "object",
                              "array"
                            ],
                            "x-enumNames": [
                              "string",
                              "date",
                              "datetime",
                              "number",
                              "boolean",
                              "dataset",
                              "lookup",
                              "object",
                              "array"
                            ]
                          }
                        },
                        "required": [
                          "label",
                          "value"
                        ]
                      }
                    }
                  },
                  "required": [
                    "vendor_contact_id",
                    "contact_type"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "vendor_contact_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "vendor_contact_id"
                  ]
                }
              }
            }
          }
        }
      },
      "WorkflowCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "workflow_type": {
            "type": "string",
            "enum": [
              "purchase_request_workflow",
              "store_requisition_workflow"
            ]
          },
          "description": {
            "type": "string"
          },
          "data": {},
          "is_active": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name",
          "workflow_type"
        ]
      },
      "WorkflowUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "workflow_type": {
            "type": "string",
            "enum": [
              "purchase_request_workflow",
              "store_requisition_workflow"
            ]
          },
          "description": {
            "type": "string"
          },
          "data": {},
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "RunningCodeCreateDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "properties": {
              "A": {
                "type": "string"
              },
              "B": {
                "type": "string"
              },
              "C": {
                "type": "string"
              },
              "D": {
                "type": "string"
              },
              "format": {
                "type": "string",
                "pattern": "^({[ABCD]}){1,4}$"
              }
            }
          }
        }
      },
      "RunningCodeUpdateDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "config": {
            "type": "object",
            "properties": {
              "A": {
                "type": "string"
              },
              "B": {
                "type": "string"
              },
              "C": {
                "type": "string"
              },
              "D": {
                "type": "string"
              },
              "format": {
                "type": "string",
                "pattern": "^({[ABCD]}){1,4}$"
              }
            }
          }
        }
      },
      "VendorBusinessTypeCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "note": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "VendorBusinessTypeUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          }
        }
      },
      "CreditTermCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "note": {
            "type": "string"
          },
          "info": {}
        },
        "required": [
          "name"
        ]
      },
      "CreditTermUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "info": {}
        }
      },
      "ExtraCostTypeCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "note": {
            "type": "string"
          },
          "info": {},
          "dimension": {}
        },
        "required": [
          "name"
        ]
      },
      "ExtraCostTypeUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "info": {},
          "dimension": {}
        }
      },
      "TaxProfileCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tax_rate": {
            "type": "number"
          },
          "is_active": {
            "type": "boolean",
            "default": true,
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "TaxProfileUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "tax_rate": {
            "type": "number"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "ClusterCreateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "is_active": {
            "type": "boolean"
          }
        },
        "required": [
          "code",
          "name",
          "is_active"
        ]
      },
      "ClusterUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "BusinessUnitCreateDto": {
        "type": "object",
        "properties": {
          "cluster_id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "config": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "datatype": {
                  "type": "string",
                  "enum": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ],
                  "x-enumNames": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ]
                },
                "value": {}
              },
              "required": [
                "key",
                "label"
              ]
            }
          },
          "is_hq": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          }
        },
        "required": [
          "cluster_id",
          "code",
          "name",
          "is_hq",
          "is_active"
        ]
      },
      "BusinessUnitUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "config": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "datatype": {
                  "type": "string",
                  "enum": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ],
                  "x-enumNames": [
                    "string",
                    "date",
                    "datetime",
                    "number",
                    "boolean",
                    "dataset",
                    "lookup",
                    "object",
                    "array"
                  ]
                },
                "value": {}
              },
              "required": [
                "key",
                "label"
              ]
            }
          },
          "is_hq": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "BusinessUnitConfigDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "datatype": {
            "type": "string",
            "enum": [
              "string",
              "date",
              "datetime",
              "number",
              "boolean",
              "dataset",
              "lookup",
              "object",
              "array"
            ],
            "x-enumNames": [
              "string",
              "date",
              "datetime",
              "number",
              "boolean",
              "dataset",
              "lookup",
              "object",
              "array"
            ]
          },
          "value": {}
        },
        "required": [
          "key",
          "label"
        ]
      },
      "UserClusterDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ]
          }
        },
        "required": [
          "user_id",
          "cluster_id",
          "is_active",
          "role"
        ]
      },
      "UserClusterUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "cluster_id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ]
          }
        }
      },
      "UserBusinessUnitDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "business_unit_id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ]
          },
          "is_default": {
            "type": "boolean",
            "default": false
          },
          "is_active": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "user_id",
          "business_unit_id",
          "role"
        ]
      },
      "UserBusinessUnitUpdateDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "business_unit_id": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ]
          },
          "is_default": {
            "type": "boolean"
          },
          "is_active": {
            "type": "boolean"
          }
        }
      },
      "CreateCreditNoteDto": {
        "type": "object",
        "properties": {
          "cn_no": {
            "type": "string"
          },
          "cn_date": {
            "type": "string",
            "format": "date-time"
          },
          "doc_status": {
            "type": "string",
            "enum": [
              "draft",
              "in_progress",
              "completed",
              "cancelled",
              "voided"
            ],
            "x-enumNames": [
              "draft",
              "in_progress",
              "completed",
              "cancelled",
              "voided"
            ],
            "default": "draft"
          },
          "credit_note_type": {
            "type": "string",
            "enum": [
              "quantity_return",
              "amount_discount"
            ],
            "x-enumNames": [
              "quantity_return",
              "amount_discount"
            ]
          },
          "description": {
            "type": "string"
          },
          "cn_reason_id": {
            "type": "string",
            "format": "uuid"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "nullable": true
          },
          "dimension": {
            "nullable": true
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid"
          },
          "currency_id": {
            "type": "string",
            "format": "uuid"
          },
          "exchange_rate": {
            "type": "number"
          },
          "exchange_rate_date": {},
          "grn_id": {
            "type": "string",
            "format": "uuid"
          },
          "credit_note_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "inventory_transaction_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "approved_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "note": {
                      "type": "string",
                      "nullable": true
                    },
                    "info": {
                      "nullable": true
                    },
                    "dimension": {
                      "nullable": true
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "is_tax_adjustment": {
                      "type": "boolean"
                    },
                    "base_tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "return_base_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "return_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "return_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "sub_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "net_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_sub_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_net_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "requested_qty",
                    "approved_qty",
                    "note",
                    "info",
                    "dimension",
                    "is_tax_adjustment"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "credit_note_type",
          "note",
          "info",
          "dimension",
          "grn_id"
        ]
      },
      "UpdateCreditNoteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "cn_no": {
            "type": "string"
          },
          "cn_date": {
            "type": "string",
            "format": "date-time"
          },
          "doc_status": {
            "type": "string",
            "enum": [
              "draft",
              "in_progress",
              "completed",
              "cancelled",
              "voided"
            ],
            "x-enumNames": [
              "draft",
              "in_progress",
              "completed",
              "cancelled",
              "voided"
            ],
            "default": "draft"
          },
          "credit_note_type": {
            "type": "string",
            "enum": [
              "quantity_return",
              "amount_discount"
            ],
            "x-enumNames": [
              "quantity_return",
              "amount_discount"
            ]
          },
          "description": {
            "type": "string"
          },
          "cn_reason_id": {
            "type": "string",
            "format": "uuid"
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "nullable": true
          },
          "dimension": {
            "nullable": true
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid"
          },
          "currency_id": {
            "type": "string",
            "format": "uuid"
          },
          "exchange_rate": {
            "type": "number"
          },
          "exchange_rate_date": {},
          "grn_id": {
            "type": "string",
            "format": "uuid"
          },
          "credit_note_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "inventory_transaction_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "approved_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "note": {
                      "type": "string",
                      "nullable": true
                    },
                    "info": {
                      "nullable": true
                    },
                    "dimension": {
                      "nullable": true
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "is_tax_adjustment": {
                      "type": "boolean"
                    },
                    "base_tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "return_base_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "return_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "return_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "sub_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "net_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_sub_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_net_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "requested_qty",
                    "approved_qty",
                    "note",
                    "info",
                    "dimension",
                    "is_tax_adjustment"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "inventory_transaction_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "credit_note_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "approved_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "note": {
                      "type": "string",
                      "nullable": true
                    },
                    "info": {
                      "nullable": true
                    },
                    "dimension": {
                      "nullable": true
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "is_tax_adjustment": {
                      "type": "boolean"
                    },
                    "base_tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "return_base_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "return_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "return_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "sub_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "net_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_sub_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_total_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_net_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "base_price": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "id",
                    "credit_note_id",
                    "requested_qty",
                    "approved_qty",
                    "note",
                    "info",
                    "dimension",
                    "is_tax_adjustment"
                  ]
                }
              },
              "delete": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "credit_note_type",
          "note",
          "info",
          "dimension",
          "grn_id"
        ]
      },
      "GoodReceivedNoteCreateDto": {
        "type": "object",
        "properties": {
          "invoice_no": {
            "type": "string"
          },
          "invoice_date": {},
          "description": {
            "type": "string"
          },
          "doc_status": {
            "type": "string",
            "enum": [
              "draft",
              "in_progress",
              "completed",
              "cancelled",
              "voided"
            ]
          },
          "doc_type": {
            "type": "string",
            "enum": [
              "manual",
              "purchase_order"
            ]
          },
          "is_consignment": {
            "type": "boolean"
          },
          "is_cash": {
            "type": "boolean"
          },
          "signature_image_url": {
            "type": "string"
          },
          "received_by_id": {
            "type": "string",
            "format": "uuid"
          },
          "received_by_name": {
            "type": "string"
          },
          "received_at": {},
          "credit_term_id": {
            "type": "string",
            "format": "uuid"
          },
          "credit_term_name": {
            "type": "string"
          },
          "credit_term_days": {
            "type": "integer"
          },
          "payment_due_date": {},
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "grn_date": {},
          "expired_date": {},
          "vendor_id": {
            "type": "string",
            "format": "uuid"
          },
          "currency_id": {
            "type": "string",
            "format": "uuid"
          },
          "exchange_rate": {
            "type": "number"
          },
          "exchange_rate_date": {},
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "discount_rate": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": false
          },
          "discount_amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": false
          },
          "is_discount_adjustment": {
            "type": "boolean"
          },
          "base_discount_amount": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": false
          },
          "note": {
            "type": "string",
            "nullable": true
          },
          "info": {
            "nullable": true
          },
          "dimension": {
            "nullable": true
          },
          "good_received_note_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "purchase_order_detail_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "is_tax_adjustment": {
                      "type": "boolean"
                    },
                    "base_tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "is_tax_adjustment"
                  ]
                }
              }
            }
          },
          "extra_cost": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "allocate_extracost_type": {
                "type": "string",
                "enum": [
                  "manual",
                  "by_value",
                  "by_qty"
                ]
              },
              "extra_cost_detail": {
                "type": "object",
                "properties": {
                  "add": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "extra_cost_type_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "tax_profile_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tax_profile_name": {
                          "type": "string"
                        },
                        "tax_rate": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "tax_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "is_tax_adjustment": {
                          "type": "boolean"
                        },
                        "base_tax_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "total_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "tax_type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "included",
                            "add"
                          ]
                        },
                        "note": {
                          "type": "string",
                          "nullable": true
                        },
                        "info": {
                          "nullable": true
                        },
                        "dimension": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "extra_cost_type_id",
                        "is_tax_adjustment",
                        "note",
                        "info",
                        "dimension"
                      ]
                    }
                  }
                }
              },
              "note": {
                "type": "string",
                "nullable": true
              },
              "info": {
                "nullable": true
              },
              "dimension": {
                "nullable": true
              }
            },
            "required": [
              "note",
              "info",
              "dimension"
            ]
          }
        },
        "required": [
          "note",
          "info",
          "dimension"
        ]
      },
      "GoodReceivedNoteUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "grn_no": {
            "type": "string"
          },
          "invoice_no": {
            "type": "string"
          },
          "invoice_f": {},
          "description": {
            "type": "string"
          },
          "doc_status": {
            "type": "string",
            "enum": [
              "draft",
              "in_progress",
              "completed",
              "cancelled",
              "voided"
            ]
          },
          "doc_type": {
            "type": "string",
            "enum": [
              "manual",
              "purchase_order"
            ]
          },
          "vendor_id": {
            "type": "string",
            "format": "uuid"
          },
          "currency_id": {
            "type": "string",
            "format": "uuid"
          },
          "currency_rate": {
            "type": "number"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "workflow_obj": {},
          "workflow_history": {},
          "current_workflow_status": {
            "type": "string"
          },
          "is_consignment": {
            "type": "boolean"
          },
          "is_cash": {
            "type": "boolean"
          },
          "signature_image_url": {
            "type": "string"
          },
          "received_by_id": {
            "type": "string",
            "format": "uuid"
          },
          "received_at": {},
          "credit_term_id": {
            "type": "string",
            "format": "uuid"
          },
          "payment_due_date": {},
          "is_active": {
            "type": "boolean"
          },
          "note": {
            "type": "string"
          },
          "info": {},
          "dimension": {},
          "good_received_note_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "purchase_order_detail_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "is_tax_adjustment": {
                      "type": "boolean"
                    },
                    "base_tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "is_tax_adjustment"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "good_received_note_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "sequence_no": {
                      "type": "number"
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "tax_profile_name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "is_tax_adjustment": {
                      "type": "boolean"
                    },
                    "base_tax_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "total_amount": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "tax_type": {
                      "type": "string",
                      "enum": [
                        "none",
                        "included",
                        "add"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "good_received_note_id",
                    "is_tax_adjustment"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "extra_cost": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "allocate_extracost_type": {
                "type": "string",
                "enum": [
                  "manual",
                  "by_value",
                  "by_qty"
                ]
              },
              "extra_cost_detail": {
                "type": "object",
                "properties": {
                  "add": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "extra_cost_type_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "tax_profile_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tax_profile_name": {
                          "type": "string"
                        },
                        "tax_rate": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "tax_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "is_tax_adjustment": {
                          "type": "boolean"
                        },
                        "base_tax_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "total_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "tax_type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "included",
                            "add"
                          ]
                        },
                        "note": {
                          "type": "string",
                          "nullable": true
                        },
                        "info": {
                          "nullable": true
                        },
                        "dimension": {
                          "nullable": true
                        }
                      },
                      "required": [
                        "extra_cost_type_id",
                        "is_tax_adjustment",
                        "note",
                        "info",
                        "dimension"
                      ]
                    }
                  },
                  "update": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "extra_cost_type_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "tax_profile_id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "tax_profile_name": {
                          "type": "string"
                        },
                        "tax_rate": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "tax_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "is_tax_adjustment": {
                          "type": "boolean"
                        },
                        "base_tax_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "total_amount": {
                          "type": "number",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "tax_type": {
                          "type": "string",
                          "enum": [
                            "none",
                            "included",
                            "add"
                          ]
                        },
                        "note": {
                          "type": "string",
                          "nullable": true
                        },
                        "info": {
                          "nullable": true
                        },
                        "dimension": {
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "extra_cost_type_id",
                        "is_tax_adjustment",
                        "note",
                        "info",
                        "dimension",
                        "id"
                      ]
                    }
                  },
                  "remove": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreatePurchaseRequestDto": {
        "type": "object",
        "properties": {
          "pr_date": {},
          "desceiption": {
            "type": "string",
            "nullable": true
          },
          "requestor_id": {
            "type": "string",
            "format": "uuid"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "department_id": {
            "type": "string",
            "format": "uuid"
          },
          "purchase_request_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "comment": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_point_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_date": {},
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "requested_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requested_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "description",
                    "comment"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "pr_date",
          "desceiption"
        ]
      },
      "UpdatePurchaseRequestDto": {
        "type": "object",
        "properties": {
          "pr_date": {},
          "desceiption": {
            "type": "string",
            "nullable": true
          },
          "requestor_id": {
            "type": "string",
            "format": "uuid"
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "department_id": {
            "type": "string",
            "format": "uuid"
          },
          "purchase_request_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "comment": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_point_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_date": {},
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "requested_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requested_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "description",
                    "comment"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "comment": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_point_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_date": {},
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "requested_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requested_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "description",
                    "comment",
                    "id"
                  ]
                }
              },
              "remove": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          },
          "doc_version": {}
        },
        "required": [
          "pr_date",
          "desceiption",
          "doc_version"
        ]
      },
      "CreatePurchaseRequestTemplateDto": {
        "type": "object",
        "properties": {
          "desceiption": {
            "type": "string",
            "nullable": true
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "department_id": {
            "type": "string",
            "format": "uuid"
          },
          "purchase_request_template_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "comment": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_point_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_date": {},
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "requested_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requested_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "description",
                    "comment"
                  ]
                }
              }
            },
            "required": [
              "add"
            ]
          }
        },
        "required": [
          "desceiption",
          "purchase_request_template_detail"
        ]
      },
      "UpdatePurchaseRequestTemplateDto": {
        "type": "object",
        "properties": {
          "desceiption": {
            "type": "string",
            "nullable": true
          },
          "workflow_id": {
            "type": "string",
            "format": "uuid"
          },
          "department_id": {
            "type": "string",
            "format": "uuid"
          },
          "purchase_request_template_detail": {
            "type": "object",
            "properties": {
              "add": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "comment": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_point_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_date": {},
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "requested_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requested_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    }
                  },
                  "required": [
                    "description",
                    "comment"
                  ]
                }
              },
              "update": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "comment": {
                      "type": "string",
                      "nullable": true
                    },
                    "product_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "location_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_point_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "delivery_date": {},
                    "requested_qty": {
                      "type": "integer",
                      "minimum": 0,
                      "exclusiveMinimum": true
                    },
                    "requested_unit_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "requested_unit_conversion_factor": {
                      "type": "number",
                      "minimum": 0,
                      "exclusiveMinimum": false
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "description",
                    "comment",
                    "id"
                  ]
                }
              },
              "delete": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "desceiption",
          "purchase_request_template_detail"
        ]
      }
    }
  }
}