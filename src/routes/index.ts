import { Elysia } from "elysia";
import apiSystemBusinessUnitRoutes from "./api-system/business-unit";
import apiSystemClusterRoutes from "./api-system/cluster";
import apiSystemUserRoutes from "./api-system/user";

import authRoutes from "./api/auth/index";
import businessUnitRoutes from "./api/business-unit";
import configRoutes from "./api/config";
import userRoutes from "./api/user";
import creditNoteRoutes from "./api/credit-note";
import creditTermRoutes from "./api/credit-term";
import goodReceivedNoteRoutes from "./api/good-received-note";
import purchaseOrderRoutes from "./api/purchase-order";
import purchaseRequestRoutes from "./api/purchase-request";
import storeRequisitionRoutes from "./api/store-requisition";
import productsRoutes from "./api/products";
import locationsRoutes from "./api/locations";
import workflowRoutes from "./api/workflow";
import departmentRoutes from "./api/department";
import userLocationRoutes from "./api/user-location";
import taxProfileRoutes from "./api/tax-profile";
import purchaseRequestTemplateRoutes from "./api/purchase-request-template";
import currenciesRoutes from "./api/currencies";
import priceListRoutes from "./api/price-list";
import creditNoteReasonRoutes from "./api/credit-note-reason";
import unitRoutes from "./api/unit";
import myPendingStoreRequisitionRoutes from "./api/my-pending/store-requisition";
import myPendingPurchaseRequestRoutes from "./api/my-pending/purchase-request";
import physicalCountRoutes from "./api/physical-count";
import vendorsRoutes from "./api/vendors";
import spotCheckRoutes from "./api/spot-check";

export const applyGeneratedRoutes = (app: Elysia) => {
  app.use(authRoutes);
  app.use(businessUnitRoutes);
  app.use(configRoutes);
  app.use(apiSystemClusterRoutes);
  app.use(apiSystemBusinessUnitRoutes);
  app.use(apiSystemUserRoutes);
  app.use(userRoutes);
  app.use(creditNoteRoutes);
  app.use(creditTermRoutes);
  app.use(goodReceivedNoteRoutes);
  app.use(purchaseOrderRoutes);
  app.use(purchaseRequestRoutes);
  app.use(storeRequisitionRoutes);
  app.use(productsRoutes);
  app.use(locationsRoutes);
  app.use(workflowRoutes);
  app.use(departmentRoutes);
  app.use(userLocationRoutes);
  app.use(taxProfileRoutes);
  app.use(purchaseRequestTemplateRoutes);
  app.use(currenciesRoutes);
  app.use(priceListRoutes);
  app.use(creditNoteReasonRoutes);
  app.use(unitRoutes);
  app.use(myPendingStoreRequisitionRoutes);
  app.use(myPendingPurchaseRequestRoutes);
  app.use(physicalCountRoutes);
  app.use(spotCheckRoutes);
  app.use(vendorsRoutes);
  return app;
};

export default applyGeneratedRoutes;