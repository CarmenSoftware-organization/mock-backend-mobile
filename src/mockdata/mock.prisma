generator client {
    provider        = "prisma-client-js"
    output          = "../generated/client"
    previewFeatures = ["postgresqlExtensions", "relationJoins"]
  }
  
  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
  
  generator prismaTypesGenerator {
    provider    = "prisma-types-generator"
    modelSuffix = "Model"
    prettier    = "true"
  }
  
  generator json {
    provider = "prisma-json-types-generator"
  }
  
  enum enum_business_unit_config_key {
    hotel
    company
  
    tax_id
    branch_no
  
    calculation_method
    currency_base
    date_format
    long_time_format
    short_time_format
    timezone
    perpage
  
    amount
    quantity
    recipe
  }
  
  enum enum_calculation_method {
    FIFO
    AVG
  }
  
  enum enum_physical_count_type {
    no
    yes
  }
  
  enum enum_activity_action {
    view
    create
    update
    delete
    login
    logout
    approve
    reject
    cancel
    void
    print
    email
    other
    upload
    download
    export
    import
    copy
    move
    rename
    save
  }
  
  enum enum_comment_type {
    user
    system
  }
  
  enum enum_tax_type {
    none
    included
    add
  }
  
  enum enum_good_received_note_status {
    draft
    saved
    committed
    voided
  }
  
  enum enum_allocate_extra_cost_type {
    manual
    by_value
    by_qty
  }
  
  enum enum_dimension_type {
    string
    number
    boolean
    date
    datetime
    json
    dataset
    lookup
    lookup_dataset
  }
  
  enum enum_data_type {
    string
    date
    datetime
    number
    boolean
    dataset
    lookup
    object
    array
  }
  
  enum enum_jv_status {
    draft
    posted
  }
  
  enum enum_good_received_note_type {
    manual
    purchase_order
  }
  
  enum enum_product_status_type {
    active
    inactive
  }
  
  enum enum_dimension_display_in {
    currency
    exchange_rate
    delivery_point
    department
    product_category
    product_sub_category
    product_item_group
    product
    location
    vendor
    pricelist
    unit
    purchase_request_header
    purchase_request_detail
    purchase_order_header
    purchase_order_detail
    goods_received_note_header
    goods_received_note_detail
    stock_take
    stock_take_detail
    transfer_header
    transfer_detail
    stock_in_header
    stock_in_detail
    stock_out_header
    stock_out_detail
  }
  
  enum enum_activity_entity_type {
    user
    business_unit
    product
    location
    department
    unit
    currency
    exchange_rate
    menu
    delivery_point
    purchase_request
    purchase_request_item
    purchase_order
    purchase_order_item
    good_received_note
    good_received_note_item
    inventory_transaction
    inventory_adjustment
    store_requisition
    store_requisition_item
    stock_in
    stock_out
    stock_adjustment
    stock_transfer
    stock_count
    stock_take
    stock_take_item
    other
  }
  
  enum enum_count_stock_type {
    physical
    spot
  }
  
  enum enum_doc_status {
    draft
    in_progress
    completed
    cancelled
    voided
  }
  
  enum enum_credit_note_type {
    quantity_return
    amount_discount
  }
  
  enum enum_credit_note_doc_status {
    draft
    in_progress
    completed
    cancelled
    voided
  }
  
  enum enum_inventory_doc_type {
    good_received_note
    credit_note
    store_requisition
    stock_in
    stock_out
  }
  
  enum enum_location_type {
    inventory
    direct
    consignment
  }
  
  enum enum_count_stock_status {
    pending
    in_progress
    completed
  }
  
  enum enum_purchase_order_doc_status {
    pending
    sent
    closed
    completed
    cancelled
    voided
  }
  
  enum enum_purchase_request_doc_status {
    draft
    in_progress
    approved
    completed
    cancelled
    voided
  }
  
  enum enum_unit_type {
    order_unit
    ingredient_unit
  }
  
  enum enum_vendor_address_type {
    contact_address
    mailing_address
    register_address
  }
  
  enum enum_vendor_contact_type {
    phone_number
    email_address
  }
  
  enum enum_workflow_type {
    purchase_request_workflow
    store_requisition_workflow
  }
  
  model tb_activity {
    id            String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    action        enum_activity_action?
    entity_type   enum_activity_entity_type?
    entity_id     String?                    @db.Uuid
    actor_id      String?                    @db.Uuid
    meta_data     Json?                      @db.Json
    old_data      Json?                      @db.Json
    new_data      Json?                      @db.Json
    ip_address    String?
    user_agent    String?
    description   String?
    created_at    DateTime?                  @default(now()) @db.Timestamptz(6)
    created_by_id String?                    @db.Uuid
  
    @@index([entity_type, entity_id], map: "activity_entitytype_entityid_idx")
  }
  
  model tb_credit_note_reason {
    id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String  @db.VarChar
    description String? @db.VarChar
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_credit_note tb_credit_note[]
  }
  
  model tb_credit_note {
    id               String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    cn_no            String?                     @db.VarChar
    cn_date          DateTime?                   @db.Timestamptz(6)
    doc_status       enum_credit_note_doc_status @default(draft)
    credit_note_type enum_credit_note_type
  
    vendor_id   String? @db.Uuid
    vendor_name String? @db.VarChar
  
    pricelist_detail_id String?  @db.Uuid
    pricelist_no        String?  @db.VarChar
    pricelist_unit      String?  @db.VarChar
    pricelist_price     Decimal? @db.Decimal(15, 5)
  
    currency_id        String?   @db.Uuid
    currency_name      String?   @db.VarChar
    exchange_rate      Decimal?  @db.Decimal(15, 5)
    exchange_rate_date DateTime? @db.Timestamptz(6)
  
    grn_id   String?   @db.Uuid
    grn_no   String?   @db.VarChar
    grn_date DateTime? @db.Timestamptz(6)
  
    cn_reason_id          String? @db.Uuid
    cn_reason_name        String? @db.VarChar
    cn_reason_description String? @db.VarChar
  
    invoice_no   String?   @db.VarChar
    invoice_date DateTime? @db.Timestamptz(6)
  
    tax_invoice_no   String?   @db.VarChar
    tax_invoice_date DateTime? @db.Timestamptz(6)
  
    note        String? @db.VarChar
    description String? @db.VarChar
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_credit_note_detail tb_credit_note_detail[]
    tb_vendor             tb_vendor?              @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_currency           tb_currency?            @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_good_received_note tb_good_received_note?  @relation(fields: [grn_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_credit_note_reason tb_credit_note_reason?  @relation(fields: [cn_reason_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([cn_no], map: "creditnote_cn_no_u")
  }
  
  model tb_credit_note_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    credit_note_id           String  @db.Uuid
    inventory_transaction_id String? @db.Uuid
  
    sequence_no Int?    @default(1)
    description String? @db.VarChar
    note        String? @db.VarChar
  
    location_id         String? @db.Uuid
    location_name       String? @db.VarChar
    delivery_point_id   String? @db.Uuid
    delivery_point_name String? @db.VarChar
  
    product_id         String  @db.Uuid
    product_name       String? @db.VarChar
    product_local_name String? @db.VarChar
  
    return_qty               Decimal? @db.Decimal(20, 5)
    return_unit_id           String?  @db.Uuid
    return_unit_name         String?  @db.VarChar
    return_conversion_factor Decimal? @db.Decimal(20, 5)
    return_base_qty          Decimal? @db.Decimal(20, 5)
  
    price Decimal? @db.Decimal(20, 5)
  
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    tax_amount        Decimal? @db.Decimal(20, 5)
    base_tax_amount   Decimal? @db.Decimal(20, 5)
    is_tax_adjustment Boolean? @default(false)
  
    discount_rate          Decimal? @default(0) @db.Decimal(15, 5)
    discount_amount        Decimal? @db.Decimal(20, 5)
    base_discount_amount   Decimal? @db.Decimal(20, 5)
    is_discount_adjustment Boolean? @default(false)
  
    extra_cost_amount      Decimal? @db.Decimal(20, 5)
    base_extra_cost_amount Decimal? @db.Decimal(20, 5)
  
    sub_total_price Decimal? @db.Decimal(20, 5)
    net_amount      Decimal? @db.Decimal(20, 5)
    total_price     Decimal? @db.Decimal(20, 5)
  
    base_price           Decimal? @db.Decimal(20, 5)
    base_sub_total_price Decimal? @db.Decimal(20, 5)
    base_net_amount      Decimal? @db.Decimal(20, 5)
    base_total_price     Decimal? @db.Decimal(20, 5)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_credit_note           tb_credit_note            @relation(fields: [credit_note_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_inventory_transaction tb_inventory_transaction? @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product               tb_product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    // tb_tax_profile           tb_tax_profile?           @relation(fields: [tax_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location              tb_location?              @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([credit_note_id, sequence_no], map: "creditnotedetail_credit_note_id_sequence_no_u")
  }
  
  model tb_currency {
    id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    code           String   @unique @db.VarChar(3)
    name           String   @db.VarChar(100)
    symbol         String?  @db.VarChar(5)
    description    String?  @default("")
    decimal_places Int?     @default(2)
    is_active      Boolean? @default(true)
  
    exchange_rate    Decimal?  @default(1) @db.Decimal(15, 5)
    exchange_rate_at DateTime? @db.Timestamptz(6)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_exchange_rate                                             tb_exchange_rate[]
    tb_good_received_note                                        tb_good_received_note[]
    tb_jv_detail_tb_jv_detail_base_currency_idTotb_currency      tb_jv_detail[]                        @relation("tb_jv_detail_base_currency_idTotb_currency")
    tb_jv_detail_tb_jv_detail_currency_idTotb_currency           tb_jv_detail[]                        @relation("tb_jv_detail_currency_idTotb_currency")
    tb_jv_header_tb_jv_header_base_currency_idTotb_currency      tb_jv_header[]                        @relation("tb_jv_header_base_currency_idTotb_currency")
    tb_jv_header_tb_jv_header_currency_idTotb_currency           tb_jv_header[]                        @relation("tb_jv_header_currency_idTotb_currency")
    tb_purchase_order_tb_purchase_order_currency_idTotb_currency tb_purchase_order[]                   @relation("tb_purchase_order_currency_idTotb_currency")
    tb_purchase_request_detail                                   tb_purchase_request_detail[]
    tb_purchase_request_template_detail                          tb_purchase_request_template_detail[]
    tb_credit_note                                               tb_credit_note[]
    tb_pricelist                                        tb_pricelist[]
  
    @@index([code], map: "currency_code_u")
  }
  
  model tb_delivery_point {
    id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name      String   @unique @db.VarChar
    is_active Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_good_received_note_detail tb_good_received_note_detail[]
    tb_location                  tb_location[]
  
    @@index([name], map: "deliverypoint_name_u")
  }
  
  model tb_department {
    id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String   @unique @db.VarChar
    description String?  @db.VarChar
    is_active   Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_department_user tb_department_user[]
  
    @@index([name], map: "department_name_u")
  }
  
  model tb_exchange_rate {
    id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    at_date       DateTime? @default(now()) @db.Timestamptz(6)
    currency_id   String?   @db.Uuid
    currency_code String?   @db.VarChar(3)
    currency_name String?   @db.VarChar
    exchange_rate Decimal?  @default(1) @db.Decimal(15, 5)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_currency tb_currency? @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([at_date, currency_id], map: "exchangerate_at_date_currency_u")
  }
  
  model tb_good_received_note {
    id       String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    grn_no   String?   @db.VarChar
    grn_date DateTime? @db.Timestamptz(6)
  
    invoice_no   String?   @db.VarChar
    invoice_date DateTime? @db.Timestamptz(6)
    description  String?   @db.VarChar
  
    doc_status enum_good_received_note_status @default(draft)
    doc_type   enum_good_received_note_type   @default(purchase_order)
  
    vendor_id   String? @db.Uuid
    vendor_name String? @db.VarChar
  
    currency_id   String   @db.Uuid
    currency_name String?  @db.VarChar
    currency_rate Decimal? @default(1) @db.Decimal(15, 5)
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    is_consignment Boolean? @default(false)
    is_cash        Boolean? @default(false)
  
    signature_image_url String?   @db.VarChar
    received_by_id      String?   @db.Uuid
    received_by_name    String?   @db.VarChar
    received_at         DateTime? @db.Timestamptz(6)
  
    credit_term_id   String?   @db.Uuid
    credit_term_name String?   @db.VarChar
    credit_term_days Int?
    payment_due_date DateTime? @db.Timestamptz(6)
  
    is_active Boolean? @default(true)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_extra_cost                tb_extra_cost[]
    tb_currency                  tb_currency                    @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_vendor                    tb_vendor?                     @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_good_received_note_detail tb_good_received_note_detail[]
    tb_credit_note               tb_credit_note[]
  }
  
  model tb_good_received_note_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_id String? @db.Uuid
    good_received_note_id    String  @db.Uuid
    purchase_order_detail_id String? @db.Uuid
    sequence_no              Int     @default(1)
  
    location_id   String  @db.Uuid
    location_name String? @db.VarChar
  
    product_id         String  @db.Uuid
    product_name       String? @db.VarChar
    product_local_name String? @db.VarChar
  
    inventory_unit_id   String? @db.Uuid
    inventory_unit_name String? @db.VarChar
  
    order_qty                    Decimal? @db.Decimal(20, 5)
    order_unit_id                String   @db.Uuid
    order_unit_name              String?  @db.VarChar
    order_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    order_base_qty               Decimal? @db.Decimal(20, 5)
  
    received_qty                    Decimal? @db.Decimal(20, 5)
    received_unit_id                String   @db.Uuid
    received_unit_name              String?  @db.VarChar
    received_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    received_base_qty               Decimal? @db.Decimal(20, 5)
  
    foc_qty                    Decimal? @db.Decimal(20, 5)
    foc_unit_id                String?  @db.Uuid
    foc_unit_name              String?  @db.VarChar
    foc_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    foc_base_qty               Decimal? @db.Decimal(20, 5)
  
    price Decimal? @db.Decimal(20, 5)
  
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    tax_amount        Decimal? @db.Decimal(20, 5)
    is_tax_adjustment Boolean? @default(false)
  
    total_amount        Decimal? @db.Decimal(20, 5)
    delivery_point_id   String?  @db.Uuid
    delivery_point_name String?  @db.VarChar
  
    base_price Decimal? @db.Decimal(20, 5)
    base_qty   Decimal? @db.Decimal(20, 5)
    extra_cost Decimal? @db.Decimal(20, 5)
    total_cost Decimal? @db.Decimal(20, 5)
  
    discount_rate          Decimal? @default(0) @db.Decimal(15, 5)
    discount_amount        Decimal? @db.Decimal(20, 5)
    is_discount_adjustment Boolean? @default(false)
  
    expired_date DateTime? @db.Timestamptz(6)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_delivery_point                                           tb_delivery_point?        @relation(fields: [delivery_point_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_good_received_note_detail_foc_unit_idTotb_unit   tb_unit?                  @relation("tb_good_received_note_detail_foc_unit_idTotb_unit", fields: [foc_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_good_received_note                                       tb_good_received_note     @relation(fields: [good_received_note_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_inventory_transaction                                    tb_inventory_transaction? @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location                                                 tb_location               @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_good_received_note_detail_order_unit_idTotb_unit tb_unit                   @relation("tb_good_received_note_detail_order_unit_idTotb_unit", fields: [order_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product                                                  tb_product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_order_detail                                    tb_purchase_order_detail? @relation(fields: [purchase_order_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit                                                     tb_unit                   @relation(fields: [received_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    // tb_tax_profile                                              tb_tax_profile?           @relation(fields: [tax_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_inventory_transaction {
    id                 String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_doc_type enum_inventory_doc_type
    inventory_doc_no   String                  @db.Uuid
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_credit_note_detail           tb_credit_note_detail[]
    tb_good_received_note_detail    tb_good_received_note_detail[]
    tb_inventory_transaction_detail tb_inventory_transaction_detail[]
    tb_stock_in_detail              tb_stock_in_detail[]
    tb_stock_out_detail             tb_stock_out_detail[]
    tb_stock_take_detail            tb_stock_take_detail[]
    tb_store_requisition_detail     tb_store_requisition_detail[]
  
    @@index([inventory_doc_no], map: "inventorytransaction_inventory_doc_no_idx")
  }
  
  model tb_inventory_transaction_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_id String  @db.Uuid
    from_lot_no              String? @db.VarChar
    current_lot_no           String? @db.VarChar
  
    location_id String? @db.Uuid
    product_id  String  @db.Uuid
  
    qty           Decimal? @db.Decimal(20, 5)
    cost_per_unit Decimal? @db.Decimal(20, 5)
    total_cost    Decimal? @db.Decimal(20, 5)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at                               DateTime?                                  @default(now()) @db.Timestamptz(6)
    created_by_id                            String?                                    @db.Uuid
    updated_at                               DateTime?                                  @default(now()) @db.Timestamptz(6)
    updated_by_id                            String?                                    @db.Uuid
    tb_inventory_transaction_closing_balance tb_inventory_transaction_closing_balance[]
    tb_inventory_transaction                 tb_inventory_transaction                   @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_inventory_transaction_closing_balance {
    id                              String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_detail_id String  @db.Uuid
    lot_no                          String? @db.VarChar
    lot_index                       Int     @default(1)
  
    location_id String? @db.Uuid
    product_id  String? @db.Uuid
  
    in_qty        Decimal? @db.Decimal(20, 5)
    out_qty       Decimal? @db.Decimal(20, 5)
    cost_per_unit Decimal? @db.Decimal(20, 5)
    total_cost    Decimal? @db.Decimal(20, 5)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at                      DateTime?                       @default(now()) @db.Timestamptz(6)
    created_by_id                   String?                         @db.Uuid
    updated_at                      DateTime?                       @default(now()) @db.Timestamptz(6)
    updated_by_id                   String?                         @db.Uuid
    tb_inventory_transaction_detail tb_inventory_transaction_detail @relation(fields: [inventory_transaction_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tb_inventory_transaction_clos_inventory_transaction_detail_fkey")
  
    @@unique([lot_no, lot_index], map: "inventorytransactionclosingbalance_lotno_lot_index_u")
  }
  
  model tb_location {
    id            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name          String             @unique @db.VarChar
    location_type enum_location_type @default(inventory)
    description   String?
  
    delivery_point_id   String? @db.Uuid
    delivery_point_name String? @db.VarChar
  
    physical_count_type enum_physical_count_type @default(no)
  
    is_active Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_count_stock                      tb_count_stock[]
    tb_good_received_note_detail        tb_good_received_note_detail[]
    tb_delivery_point                   tb_delivery_point?                    @relation(fields: [delivery_point_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product_location                 tb_product_location[]
    tb_purchase_request_detail          tb_purchase_request_detail[]
    tb_purchase_request_template_detail tb_purchase_request_template_detail[]
    tb_user_location                    tb_user_location[]
    tb_credit_note_detail               tb_credit_note_detail[]
    tb_stock_in_detail                  tb_stock_in_detail[]
    tb_stock_out_detail                 tb_stock_out_detail[]
    tb_stock_take_detail                tb_stock_take_detail[]
    tb_store_requisition_detail         tb_store_requisition_detail[]
    tb_store_requisition                tb_store_requisition[]
  
    @@index([name], map: "location_name_u")
  }
  
  model tb_menu {
    id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    module_id     String    @db.Uuid
    name          String    @db.VarChar
    url           String    @db.VarChar
    description   String?
    is_visible    Boolean?  @default(true)
    is_active     Boolean?  @default(true)
    is_lock       Boolean?  @default(true)
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@index([name], map: "menu_name_u")
  }
  
  model tb_product {
    id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    code        String  @unique @db.VarChar
    name        String  @unique @db.VarChar
    local_name  String? @db.VarChar
    description String? @db.VarChar
  
    inventory_unit_id   String                   @db.Uuid
    inventory_unit_name String                   @default("") @db.VarChar
    product_status_type enum_product_status_type @default(active)
  
    product_item_group_id String?  @db.Uuid
    is_used_in_recipe     Boolean? @default(true)
    is_sold_directly      Boolean? @default(false)
    barcode               String?  @db.VarChar
    sku                   String?  @db.VarChar
    price_deviation_limit Decimal? @default(0) @db.Decimal(20, 5)
    qty_deviation_limit   Decimal? @default(0) @db.Decimal(20, 5)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_count_stock_detail               tb_count_stock_detail[]
    tb_credit_note_detail               tb_credit_note_detail[]
    tb_good_received_note_detail        tb_good_received_note_detail[]
    tb_pricelist_detail                 tb_pricelist_detail[]
    tb_unit                             tb_unit                               @relation(fields: [inventory_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product_location                 tb_product_location[]
    tb_product_tb_vendor                tb_product_tb_vendor[]
    tb_purchase_request_detail          tb_purchase_request_detail[]
    tb_purchase_request_template_detail tb_purchase_request_template_detail[]
    tb_stock_in_detail                  tb_stock_in_detail[]
    tb_stock_out_detail                 tb_stock_out_detail[]
    tb_stock_take_detail                tb_stock_take_detail[]
    tb_store_requisition_detail         tb_store_requisition_detail[]
    tb_unit_conversion                  tb_unit_conversion[]
    tb_product_item_group               tb_product_item_group?                @relation(fields: [product_item_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_pricelist_template_detail        tb_pricelist_template_detail[]
  
    @@index([code], map: "product_code_u")
    @@index([name], map: "product_name_u")
  }
  
  model tb_product_category {
    id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    code                  String   @unique @db.VarChar
    name                  String   @unique @db.VarChar
    description           String?  @db.VarChar
    is_active             Boolean? @default(true)
    price_deviation_limit Decimal? @default(0) @db.Decimal(20, 5)
    qty_deviation_limit   Decimal? @default(0) @db.Decimal(20, 5)
    is_used_in_recipe     Boolean? @default(true)
    is_sold_directly      Boolean? @default(false)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_product_sub_category tb_product_sub_category[]
  
    @@index([code], map: "productcategory_code_u")
    @@index([name], map: "productcategory_name_u")
  }
  
  model tb_product_item_group {
    id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    product_subcategory_id String   @db.Uuid
    code                   String   @default("") @db.VarChar
    name                   String   @db.VarChar
    description            String?  @db.VarChar
    price_deviation_limit  Decimal? @default(0) @db.Decimal(20, 5)
    qty_deviation_limit    Decimal? @default(0) @db.Decimal(20, 5)
    is_used_in_recipe      Boolean? @default(true)
    is_sold_directly       Boolean? @default(false)
    is_active              Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_product              tb_product[]
    tb_product_sub_category tb_product_sub_category @relation(fields: [product_subcategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([code, name, product_subcategory_id], map: "productitemgroup_code_name_product_subcategory_u")
  }
  
  model tb_product_sub_category {
    id                  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    product_category_id String  @db.Uuid
    code                String  @default("") @db.VarChar
    name                String  @db.VarChar
    description         String? @db.VarChar
  
    price_deviation_limit Decimal? @default(0) @db.Decimal(20, 5)
    qty_deviation_limit   Decimal? @default(0) @db.Decimal(20, 5)
    is_used_in_recipe     Boolean? @default(true)
    is_sold_directly      Boolean? @default(false)
    is_active             Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_product_item_group tb_product_item_group[]
    tb_product_category   tb_product_category     @relation(fields: [product_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([code, name, product_category_id], map: "productsubcategory_code_name_product_category_u")
  }
  
  model tb_product_tb_vendor {
    id                  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    product_id          String  @db.Uuid
    product_name        String? @db.VarChar
    vendor_id           String? @db.Uuid
    vendor_product_code String? @db.VarChar
    vendor_product_name String? @db.VarChar
    description         String? @db.VarChar
  
    is_active Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_product tb_product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_vendor  tb_vendor? @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([vendor_id, product_id], map: "product_vendor_vendor_product_u")
  }
  
  model tb_purchase_order {
    id            String                          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    po_no         String                          @unique @db.VarChar
    po_status     enum_purchase_order_doc_status? @default(pending)
    description   String?
    order_date    DateTime?                       @db.Timestamptz(6)
    delivery_date DateTime?                       @db.Timestamptz(6)
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    vendor_id     String?   @db.Uuid
    vendor_name   String?   @db.VarChar
    currency_id   String?   @db.Uuid
    currency_name String?   @db.VarChar
    exchange_rate Decimal?  @db.Decimal(15, 5)
    approval_date DateTime? @db.Timestamptz(6)
  
    email             String?  @db.VarChar
    buyer_id          String?  @db.Uuid
    buyer_name        String?  @db.VarChar
    credit_term_id    String?  @db.Uuid
    credit_term_name  String?  @db.VarChar
    credit_term_value Decimal? @db.Decimal(15, 5)
  
    remarks   String?  @db.VarChar
    history   Json?    @db.Json
    is_active Boolean? @default(true)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_credit_term                                         tb_credit_term?            @relation(fields: [credit_term_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_currency_tb_purchase_order_currency_idTotb_currency tb_currency?               @relation("tb_purchase_order_currency_idTotb_currency", fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_vendor                                              tb_vendor?                 @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_order_detail                               tb_purchase_order_detail[]
  
    @@index([po_no], map: "PO_po_no_u")
  }
  
  model tb_purchase_order_detail {
    id                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    purchase_order_id String? @db.Uuid
    description       String?
    sequence_no       Int?    @default(1)
  
    is_active Boolean? @default(true)
  
    order_qty                    Decimal? @db.Decimal(20, 5)
    order_unit_id                String?  @db.Uuid
    order_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    order_unit_name              String?  @db.VarChar
  
    base_qty       Decimal? @db.Decimal(20, 5)
    base_unit_id   String?  @db.Uuid
    base_unit_name String?  @db.VarChar
  
    is_foc Boolean? @default(false)
  
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    tax_amount        Decimal? @db.Decimal(20, 5)
    base_tax_amount   Decimal? @db.Decimal(20, 5)
    is_tax_adjustment Boolean? @default(false)
  
    discount_rate          Decimal? @default(0) @db.Decimal(15, 5)
    discount_amount        Decimal? @default(0) @db.Decimal(20, 5)
    base_discount_amount   Decimal? @db.Decimal(20, 5)
    is_discount_adjustment Boolean? @default(false)
  
    price           Decimal? @db.Decimal(20, 5)
    sub_total_price Decimal? @db.Decimal(20, 5)
    net_amount      Decimal? @db.Decimal(20, 5)
    total_price     Decimal? @db.Decimal(20, 5)
  
    base_price           Decimal? @db.Decimal(20, 5)
    base_sub_total_price Decimal? @db.Decimal(20, 5)
    base_net_amount      Decimal? @default(0) @db.Decimal(20, 5)
    base_total_price     Decimal? @db.Decimal(20, 5)
  
    received_qty  Decimal? @default(0) @db.Decimal(20, 5)
    cancelled_qty Decimal? @default(0) @db.Decimal(20, 5)
  
    history Json? @db.Json
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_good_received_note_detail                            tb_good_received_note_detail[]
    tb_unit_tb_purchase_order_detail_base_unit_idTotb_unit  tb_unit?                       @relation("tb_purchase_order_detail_base_unit_idTotb_unit", fields: [base_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_purchase_order_detail_order_unit_idTotb_unit tb_unit?                       @relation("tb_purchase_order_detail_order_unit_idTotb_unit", fields: [order_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_order                                       tb_purchase_order?             @relation(fields: [purchase_order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    // tb_tax_profile                                          tb_tax_profile?                @relation(fields: [tax_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    tb_purchase_order_detail_tb_purchase_request_detail tb_purchase_order_detail_tb_purchase_request_detail[]
  
    @@index([purchase_order_id], map: "PO1_purchase_order_detail_u")
  }
  
  model tb_purchase_order_detail_tb_purchase_request_detail {
    id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    po_detail_id String @db.Uuid
    pr_detail_id String @db.Uuid
  
    pr_detail_order_unit_id   String   @db.Uuid
    pr_detail_order_unit_name String   @db.VarChar
    pr_detail_qty             Decimal? @db.Decimal(20, 5)
  
    pr_detail_base_qty       Decimal? @db.Decimal(20, 5)
    pr_detail_base_unit_id   String?  @db.Uuid
    pr_detail_base_unit_name String?  @db.VarChar
  
    tb_purchase_order_detail   tb_purchase_order_detail   @relation(fields: [po_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_request_detail tb_purchase_request_detail @relation(fields: [pr_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([po_detail_id, pr_detail_id], map: "PO1_purchase_order_purchase_request_detail_u")
  }
  
  enum enum_stage_role {
    create
    approve
    purchase
    view_only
  }
  
  model tb_purchase_request {
    id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    pr_no       String    @unique @db.VarChar
    pr_date     DateTime? @db.Timestamptz(6)
    description String?   @db.VarChar
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    pr_status enum_purchase_request_doc_status? @default(draft)
  
    requestor_id   String? @db.Uuid
    requestor_name String? @db.VarChar
  
    department_id   String? @db.Uuid
    department_name String? @db.VarChar
  
    note String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_workflow                tb_workflow?                 @relation(fields: [workflow_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_request_detail tb_purchase_request_detail[]
  
    @@index([pr_no], map: "PR0_pr_no_u")
  }
  
  enum enum_last_action {
    submitted
    approved
    reviewed
    rejected
  }
  
  model tb_purchase_request_detail {
    id                  String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    purchase_request_id String? @db.Uuid
    sequence_no         Int?    @default(1)
  
    location_id         String? @db.Uuid
    location_name       String? @db.VarChar
    delivery_point_id   String? @db.Uuid
    delivery_point_name String? @db.VarChar
  
    delivery_date DateTime? @db.Timestamptz(6)
  
    product_id         String  @db.Uuid
    product_name       String? @db.VarChar
    product_local_name String? @db.VarChar
  
    inventory_unit_id   String? @db.Uuid
    inventory_unit_name String? @db.VarChar
  
    description String? @db.VarChar
    comment     String? @db.VarChar
  
    vendor_id   String? @db.Uuid
    vendor_name String? @db.VarChar
  
    pricelist_detail_id String?  @db.Uuid
    pricelist_no        String?  @db.VarChar
    pricelist_unit      String?  @db.VarChar
    pricelist_price     Decimal? @db.Decimal(15, 5)
  
    currency_id        String?   @db.Uuid
    currency_name      String?   @db.VarChar
    exchange_rate      Decimal?  @db.Decimal(15, 5)
    exchange_rate_date DateTime? @db.Timestamptz(6)
  
    requested_qty                    Decimal? @db.Decimal(20, 5)
    requested_unit_id                String?  @db.Uuid
    requested_unit_name              String?  @db.VarChar
    requested_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    requested_base_qty               Decimal? @db.Decimal(20, 5)
  
    approved_qty                    Decimal? @db.Decimal(20, 5)
    approved_unit_id                String?  @db.Uuid
    approved_unit_name              String?  @db.VarChar
    approved_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    approved_base_qty               Decimal? @db.Decimal(20, 5)
  
    foc_qty                    Decimal? @db.Decimal(20, 5)
    foc_unit_id                String?  @db.Uuid
    foc_unit_name              String?  @db.VarChar
    foc_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    foc_base_qty               Decimal? @db.Decimal(20, 5)
  
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    tax_amount        Decimal? @db.Decimal(20, 5)
    base_tax_amount   Decimal? @db.Decimal(20, 5)
    is_tax_adjustment Boolean? @default(false)
  
    discount_rate          Decimal? @default(0) @db.Decimal(15, 5)
    discount_amount        Decimal? @default(0) @db.Decimal(20, 5)
    base_discount_amount   Decimal? @db.Decimal(20, 5)
    is_discount_adjustment Boolean? @default(false)
  
    sub_total_price Decimal? @db.Decimal(20, 5) // pricelist_price * approved qty
    net_amount      Decimal? @db.Decimal(20, 5) // subtotal_price - discount_amount
    total_price     Decimal? @db.Decimal(20, 5) // net_amount + tax_amount
  
    base_price           Decimal? @db.Decimal(20, 5) // pricelist_price * exchange_rate
    base_sub_total_price Decimal? @db.Decimal(20, 5) // base_price * approved qty
    base_net_amount      Decimal? @db.Decimal(20, 5) // base_sub_total_price - base_discount_amount
    base_total_price     Decimal? @db.Decimal(20, 5) // base_net_amount + base_tax_amount
  
    history Json? @db.Json
    /**
     * [
     * {"seq" : 1, "name" : "stage1", "status": "submit", "message": "", "by_id": "xxxxxx", "by_name" : "User1", "at_date" : "2024-01-01 01:01:01"},
     * {"seq" : 2, "name" : "stage2", "status": "approved", "message": "", "by_id": "xxxxxx", "by_name" : "User2", "at_date" : "2024-01-01 01:01:01"},
     * {"seq" : 3, "name" : "stage3", "status": "review", "to_stage" : "stage2", "message": "check price" , "by_id": "xxxxxx", "by_name" : "User3", "at_date" : "2024-01-01 01:01:01"},
     * {"seq" : 4, "name" : "stage2", "status": "rejected", "message": "void item", "by_id": "xxxxxx", "by_name" : "User2", "at_date" : "2024-01-01 01:01:01"},
     * ]
     */
  
    // approved_message String?   @db.VarChar
    // approved_by_id   String?   @db.Uuid
    // approved_by_name String?   @db.VarChar
    // approved_date_at DateTime? @db.Timestamptz(6)
  
    // review_message String?   @db.VarChar
    // review_by_id   String?   @db.Uuid
    // review_by_name String?   @db.VarChar
    // review_date_at DateTime? @db.Timestamptz(6)
  
    // reject_message String?   @db.VarChar
    // reject_by_id   String?   @db.Uuid
    // reject_by_name String?   @db.VarChar
    // reject_date_at DateTime? @db.Timestamptz(6)
  
    stages_status Json? @db.Json
  
    /**
     * [
     * {"seq" : 1, "name" : "stage1", "status": "submit"},
     * {"seq" : 2, "name" : "stage2", "status": "approved"},
     * {"seq" : 3, "name" : "stage3", "status": null},
     * {"seq" : 4, "name" : "stage4", "status": null},
     * ]
     */
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_purchase_order_detail_tb_purchase_request_detail           tb_purchase_order_detail_tb_purchase_request_detail[]
    tb_unit_tb_purchase_request_detail_approved_unit_idTotb_unit  tb_unit?                                              @relation("tb_purchase_request_detail_approved_unit_idTotb_unit", fields: [approved_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_currency                                                   tb_currency?                                          @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_purchase_request_detail_foc_unit_idTotb_unit       tb_unit?                                              @relation("tb_purchase_request_detail_foc_unit_idTotb_unit", fields: [foc_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location                                                   tb_location?                                          @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_pricelist_detail                                           tb_pricelist_detail?                                  @relation(fields: [pricelist_detail_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product                                                    tb_product                                            @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_request                                           tb_purchase_request?                                  @relation(fields: [purchase_request_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_purchase_request_detail_requested_unit_idTotb_unit tb_unit?                                              @relation("tb_purchase_request_detail_requested_unit_idTotb_unit", fields: [requested_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    // tb_tax_profile                                                tb_tax_profile?                                       @relation(fields: [tax_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_vendor                                                     tb_vendor?                                            @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([purchase_request_id, product_id, location_id], map: "PR1_purchase_request_product_location_u")
  }
  
  model tb_purchase_request_template {
    id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    description String? @db.VarChar
  
    workflow_id   String? @db.Uuid
    workflow_name String? @db.VarChar
  
    department_id   String? @db.Uuid
    department_name String? @db.VarChar
  
    is_active Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_workflow                         tb_workflow?                          @relation(fields: [workflow_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_request_template_detail tb_purchase_request_template_detail[]
  
    @@index([id], map: "PRT0_id_u")
  }
  
  model tb_purchase_request_template_detail {
    id                           String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    purchase_request_template_id String? @db.Uuid
  
    location_id         String? @db.Uuid
    location_name       String? @db.VarChar
    delivery_point_id   String? @db.Uuid
    delivery_point_name String? @db.VarChar
  
    // delivery_date       DateTime? @db.Timestamptz(6)
  
    product_id         String  @db.Uuid
    product_name       String? @db.VarChar
    product_local_name String? @db.VarChar
  
    inventory_unit_id   String? @db.Uuid
    inventory_unit_name String? @db.VarChar
  
    description String? @db.VarChar
    comment     String? @db.VarChar
  
    // vendor_id           String? @db.Uuid
    // vendor_name         String? @db.VarChar
    // pricelist_detail_id String? @db.Uuid
    // pricelist_no        String? @db.VarChar
    // pricelist_unit      String? @db.VarChar
    // pricelist_price     Decimal?  @db.Decimal(15, 5)
  
    currency_id        String?   @db.Uuid
    currency_name      String?   @db.VarChar
    exchange_rate      Decimal?  @db.Decimal(15, 5)
    exchange_rate_date DateTime? @db.Timestamptz(6)
  
    requested_qty                    Decimal? @db.Decimal(20, 5)
    requested_unit_id                String?  @db.Uuid
    requested_unit_name              String?  @db.VarChar
    requested_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    requested_base_qty               Decimal? @db.Decimal(20, 5)
  
    // approved_qty                    Decimal? @db.Decimal(20, 5)
    // approved_unit_id                String?  @db.Uuid
    // approved_unit_name              String?  @db.VarChar
    // approved_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    // approved_base_qty               Decimal? @db.Decimal(20, 5)
  
    // foc_qty                    Decimal? @db.Decimal(20, 5)
    // foc_unit_id                String?  @db.Uuid
    // foc_unit_name              String?  @db.VarChar
    // foc_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    // foc_base_qty               Decimal? @db.Decimal(20, 5)
  
    foc_qty                    Decimal? @db.Decimal(20, 5)
    foc_unit_id                String?  @db.Uuid
    foc_unit_name              String?  @db.VarChar
    foc_unit_conversion_factor Decimal? @db.Decimal(20, 5)
    foc_base_qty               Decimal? @db.Decimal(20, 5)
  
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    tax_amount        Decimal? @db.Decimal(20, 5)
    base_tax_amount   Decimal? @db.Decimal(20, 5)
    is_tax_adjustment Boolean? @default(false)
  
    discount_rate          Decimal? @default(0) @db.Decimal(15, 5)
    discount_amount        Decimal? @default(0) @db.Decimal(20, 5)
    base_discount_amount   Decimal? @db.Decimal(20, 5)
    is_discount_adjustment Boolean? @default(false)
  
    is_active Boolean? @default(true)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_currency                                                            tb_currency?                  @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_purchase_request_template_detail_foc_unit_idTotb_unit       tb_unit?                      @relation("tb_purchase_request_template_detail_foc_unit_idTotb_unit", fields: [foc_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location                                                            tb_location?                  @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product                                                             tb_product                    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_request_template                                           tb_purchase_request_template? @relation(fields: [purchase_request_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_purchase_request_template_detail_requested_unit_idTotb_unit tb_unit?                      @relation("tb_purchase_request_template_detail_requested_unit_idTotb_unit", fields: [requested_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    // tb_tax_profile                                                         tb_tax_profile?               @relation(fields: [tax_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([purchase_request_template_id, product_id, location_id], map: "PRT1_purchase_request_template_product_location_u")
  }
  
  model tb_stock_in {
    id          String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    si_no       String?         @db.VarChar
    description String?         @db.VarChar
    doc_status  enum_doc_status @default(draft)
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at         DateTime?            @default(now()) @db.Timestamptz(6)
    created_by_id      String?              @db.Uuid
    updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
    updated_by_id      String?              @db.Uuid
    tb_stock_in_detail tb_stock_in_detail[]
  }
  
  model tb_stock_in_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_id String? @db.Uuid
    stock_in_id              String  @db.Uuid
    sequence_no              Int?    @default(1)
    description              String? @db.VarChar
  
    location_id   String? @db.Uuid
    location_name String? @db.VarChar
  
    product_id         String   @db.Uuid
    product_name       String?  @db.VarChar
    product_local_name String?  @db.VarChar
    qty                Decimal? @db.Decimal(20, 5)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_inventory_transaction tb_inventory_transaction? @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product               tb_product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_stock_in              tb_stock_in               @relation(fields: [stock_in_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location              tb_location?              @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_stock_out {
    id          String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    so_no       String?         @db.VarChar
    description String?         @db.VarChar
    doc_status  enum_doc_status @default(draft)
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_stock_out_detail tb_stock_out_detail[]
  }
  
  model tb_stock_out_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_id String? @db.Uuid
    stock_out_id             String  @db.Uuid
    sequence_no              Int?    @default(1)
    description              String? @db.VarChar
  
    location_id   String? @db.Uuid
    location_name String? @db.VarChar
  
    product_id         String   @db.Uuid
    product_name       String?  @db.VarChar
    product_local_name String?  @db.VarChar
    qty                Decimal? @db.Decimal(20, 5)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_inventory_transaction tb_inventory_transaction? @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product               tb_product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_stock_out             tb_stock_out              @relation(fields: [stock_out_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location              tb_location?              @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_stock_take {
    id          String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String?         @db.VarChar
    stk_no      String?         @db.VarChar
    description String?         @db.VarChar
    doc_status  enum_doc_status @default(draft)
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_stock_take_detail tb_stock_take_detail[]
  
    @@index([stk_no], map: "stk_no_u")
  }
  
  model tb_stock_take_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_id String? @db.Uuid
    stock_take_id            String  @db.Uuid
    sequence_no              Int?    @default(1)
    description              String? @db.VarChar
  
    location_id   String? @db.Uuid
    location_name String? @db.VarChar
  
    product_id         String   @db.Uuid
    product_name       String?  @db.VarChar
    product_local_name String?  @db.VarChar
    qty                Decimal? @db.Decimal(20, 5)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_inventory_transaction tb_inventory_transaction? @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product               tb_product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_stock_take            tb_stock_take             @relation(fields: [stock_take_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location              tb_location?              @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_store_requisition {
    id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    sr_no         String    @db.VarChar
    sr_date       DateTime? @db.Timestamptz(6)
    expected_date DateTime? @db.Timestamptz(6)
  
    description String?         @db.VarChar
    doc_status  enum_doc_status @default(draft)
  
    from_location_id   String? @db.Uuid
    from_location_name String? @db.VarChar
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json // {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    requestor_id    String? @db.Uuid
    requestor_name  String? @db.VarChar
    department_id   String? @db.Uuid
    department_name String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_store_requisition_detail tb_store_requisition_detail[]
    tb_location                 tb_location?                  @relation(fields: [from_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    workflow                    tb_workflow?                  @relation(fields: [workflow_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([sr_no], map: "sr_no_u")
  }
  
  model tb_store_requisition_detail {
    id                       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    inventory_transaction_id String? @db.Uuid
    store_requisition_id     String  @db.Uuid
    sequence_no              Int?    @default(1)
    description              String? @db.VarChar
  
    to_location_id   String? @db.Uuid
    to_location_name String? @db.VarChar
  
    product_id         String  @db.Uuid
    product_name       String? @db.VarChar
    product_local_name String? @db.VarChar
  
    requested_qty Decimal? @db.Decimal(20, 5)
    approved_qty  Decimal? @db.Decimal(20, 5)
    issued_qty    Decimal? @db.Decimal(20, 5)
  
    history     Json?             @db.Json
    last_action enum_last_action? @default(submitted)
  
    approved_message String?   @db.VarChar
    approved_by_id   String?   @db.Uuid
    approved_by_name String?   @db.VarChar
    approved_date_at DateTime? @db.Timestamptz(6)
  
    review_message String?   @db.VarChar
    review_by_id   String?   @db.Uuid
    review_by_name String?   @db.VarChar
    review_date_at DateTime? @db.Timestamptz(6)
  
    reject_message String?   @db.VarChar
    reject_by_id   String?   @db.Uuid
    reject_by_name String?   @db.VarChar
    reject_date_at DateTime? @db.Timestamptz(6)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_inventory_transaction tb_inventory_transaction? @relation(fields: [inventory_transaction_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product               tb_product                @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_store_requisition     tb_store_requisition      @relation(fields: [store_requisition_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_location              tb_location?              @relation(fields: [to_location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_unit {
    id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String   @unique @db.VarChar
    description String?  @db.VarChar
    is_active   Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_good_received_note_detail_tb_good_received_note_detail_foc_unit_idTotb_unit            tb_good_received_note_detail[]        @relation("tb_good_received_note_detail_foc_unit_idTotb_unit")
    tb_good_received_note_detail_tb_good_received_note_detail_order_unit_idTotb_unit          tb_good_received_note_detail[]        @relation("tb_good_received_note_detail_order_unit_idTotb_unit")
    tb_good_received_note_detail                                                              tb_good_received_note_detail[]
    tb_pricelist_detail                                                                       tb_pricelist_detail[]
    tb_product                                                                                tb_product[]
    tb_purchase_order_detail_tb_purchase_order_detail_base_unit_idTotb_unit                   tb_purchase_order_detail[]            @relation("tb_purchase_order_detail_base_unit_idTotb_unit")
    tb_purchase_order_detail_tb_purchase_order_detail_order_unit_idTotb_unit                  tb_purchase_order_detail[]            @relation("tb_purchase_order_detail_order_unit_idTotb_unit")
    tb_purchase_request_detail_tb_purchase_request_detail_approved_unit_idTotb_unit           tb_purchase_request_detail[]          @relation("tb_purchase_request_detail_approved_unit_idTotb_unit")
    tb_purchase_request_detail_tb_purchase_request_detail_foc_unit_idTotb_unit                tb_purchase_request_detail[]          @relation("tb_purchase_request_detail_foc_unit_idTotb_unit")
    tb_purchase_request_detail_tb_purchase_request_detail_requested_unit_idTotb_unit          tb_purchase_request_detail[]          @relation("tb_purchase_request_detail_requested_unit_idTotb_unit")
    tb_unit_conversion_tb_unit_conversion_from_unit_idTotb_unit                               tb_unit_conversion[]                  @relation("tb_unit_conversion_from_unit_idTotb_unit")
    tb_unit_conversion_tb_unit_conversion_to_unit_idTotb_unit                                 tb_unit_conversion[]                  @relation("tb_unit_conversion_to_unit_idTotb_unit")
    tb_purchase_request_template_detail_tb_purchase_request_detail_foc_unit_idTotb_unit       tb_purchase_request_template_detail[] @relation("tb_purchase_request_template_detail_foc_unit_idTotb_unit")
    tb_purchase_request_template_detail_tb_purchase_request_detail_requested_unit_idTotb_unit tb_purchase_request_template_detail[] @relation("tb_purchase_request_template_detail_requested_unit_idTotb_unit")
  
    @@index([name], map: "unit_name_u")
  }
  
  model tb_unit_conversion {
    id         String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    product_id String?        @db.Uuid
    unit_type  enum_unit_type
  
    from_unit_id   String?  @db.Uuid
    from_unit_name String   @db.VarChar
    from_unit_qty  Decimal? @default(1) @db.Decimal(20, 5)
  
    to_unit_id   String?  @db.Uuid
    to_unit_name String   @db.VarChar
    to_unit_qty  Decimal? @default(1) @db.Decimal(20, 5)
  
    is_default  Boolean? @default(false)
    description Json?    @db.Json
    is_active   Boolean? @default(true)
  
    note      String? @db.VarChar
    info      Json?   @db.Json
    dimension Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_unit_tb_unit_conversion_from_unit_idTotb_unit tb_unit?    @relation("tb_unit_conversion_from_unit_idTotb_unit", fields: [from_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product                                       tb_product? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit_tb_unit_conversion_to_unit_idTotb_unit   tb_unit?    @relation("tb_unit_conversion_to_unit_idTotb_unit", fields: [to_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([product_id, unit_type, from_unit_id, to_unit_id], map: "unitconversion_product_unit_type_from_unit_to_unit_u")
  }
  
  model tb_vendor {
    id                 String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name               String  @unique @db.VarChar
    description        String? @db.VarChar
    note               String? @db.VarChar
    business_type_id   String? @db.Uuid
    business_type_name String? @db.VarChar
  
    tax_profile_id   String?  @db.Uuid
    tax_profile_name String?  @db.VarChar
    tax_rate         Decimal? @db.Decimal(15, 5)
  
    is_active Boolean? @default(true)
  
    info      Json? @db.Json
    dimension Json? @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_good_received_note      tb_good_received_note[]
    tb_product_tb_vendor       tb_product_tb_vendor[]
    tb_purchase_order          tb_purchase_order[]
    tb_purchase_request_detail tb_purchase_request_detail[]
    tb_vendor_business_type    tb_vendor_business_type?     @relation(fields: [business_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_vendor_address          tb_vendor_address[]
    tb_vendor_contact          tb_vendor_contact[]
    tb_credit_note             tb_credit_note[]
    tb_pricelist               tb_pricelist[]
    tb_request_for_pricing_detail tb_request_for_pricing_detail[]
  
    @@index([name], map: "vendor_name_u")
  }
  
  model tb_vendor_address {
    id           String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    vendor_id    String?                   @db.Uuid
    address_type enum_vendor_address_type?
    data         Json?                     @db.Json
    is_active    Boolean?                  @default(true)
  
    description String? @db.VarChar
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_vendor tb_vendor? @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([vendor_id, address_type], map: "vendoraddress_vendor_address_type_idx")
  }
  
  model tb_vendor_contact {
    id           String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    vendor_id    String?                  @db.Uuid
    contact_type enum_vendor_contact_type
    is_active    Boolean?                 @default(true)
  
    description String? @db.VarChar
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_vendor tb_vendor? @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([vendor_id, contact_type], map: "vendorcontact_vendor_contact_type_idx")
  }
  
  model tb_workflow {
    id            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name          String             @unique @db.VarChar
    workflow_type enum_workflow_type
    data          Json?              @db.Json
    is_active     Boolean?           @default(true)
  
    description String? @db.VarChar
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_purchase_request          tb_purchase_request[]
    tb_purchase_request_template tb_purchase_request_template[]
    tb_store_requisition         tb_store_requisition[]
  
    @@index([name, workflow_type], map: "workflow_name_workflow_type_u")
  }
  
  model tb_count_stock {
    id             String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    count_stock_no String? @db.VarChar
  
    start_date DateTime  @default(now()) @db.Timestamptz(6)
    end_date   DateTime? @db.Timestamptz(6)
  
    location_id      String                  @db.Uuid
    location_name    String?                 @db.VarChar
    doc_status       enum_count_stock_status @default(pending)
    count_stock_type enum_count_stock_type   @default(physical)
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_location tb_location @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    tb_count_stock_detail tb_count_stock_detail[]
  }
  
  model tb_count_stock_detail {
    id             String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    count_stock_id String @db.Uuid
    sequence_no    Int?   @default(1)
  
    product_id   String   @db.Uuid
    product_name String?  @db.VarChar
    qty          Decimal? @db.Decimal(20, 5)
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_count_stock tb_count_stock @relation(fields: [count_stock_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product     tb_product     @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_jv_detail {
    id           String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    jv_header_id String @db.Uuid
  
    account_code String? @db.VarChar
    account_name String? @db.VarChar
    sequence_no  Int?    @default(1)
  
    currency_id   String?  @db.Uuid
    currency_name String?  @db.VarChar
    exchange_rate Decimal? @db.Decimal(15, 5)
    debit         Decimal? @default(0) @db.Decimal(20, 5)
    credit        Decimal? @default(0) @db.Decimal(20, 5)
  
    base_currency_id   String?  @db.Uuid
    base_currency_name String?  @db.VarChar
    base_debit         Decimal? @default(0) @db.Decimal(20, 5)
    base_credit        Decimal? @default(0) @db.Decimal(20, 5)
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_currency_tb_jv_detail_base_currency_idTotb_currency tb_currency? @relation("tb_jv_detail_base_currency_idTotb_currency", fields: [base_currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_currency_tb_jv_detail_currency_idTotb_currency      tb_currency? @relation("tb_jv_detail_currency_idTotb_currency", fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_jv_header                                           tb_jv_header @relation(fields: [jv_header_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_jv_header {
    id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    currency_id        String?  @db.Uuid
    currency_name      String?  @db.VarChar
    exchange_rate      Decimal? @db.Decimal(15, 5)
    base_currency_id   String?  @db.Uuid
    base_currency_name String?  @db.VarChar
  
    jv_type     String   @db.VarChar(255)
    jv_no       String   @db.VarChar(255)
    jv_date     DateTime @db.Timestamptz(6)
    description String?  @db.VarChar
    note        String?  @db.VarChar
  
    jv_status enum_jv_status
  
    workflow_id             String? @db.Uuid
    workflow_name           String? @db.VarChar
    workflow_history        Json?   @db.Json
    workflow_current_stage  String? @db.VarChar
    workflow_previous_stage String? @db.VarChar
    workflow_next_stage     String? @db.VarChar
  
    user_action         Json?             @db.Json
    /*
      {"read_only": ["@me","@department"], "execute": [{id: "00000000-0000-0000-0000-000000000000"}, {id : "00000000-0000-0000-0000-123123123"}]}
    */
    last_action         enum_last_action? @default(submitted)
    last_action_at_date DateTime?         @db.Timestamptz(6)
    last_action_by_id   String?           @db.Uuid
    last_action_by_name String?           @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_jv_detail                                           tb_jv_detail[]
    tb_currency_tb_jv_header_base_currency_idTotb_currency tb_currency?   @relation("tb_jv_header_base_currency_idTotb_currency", fields: [base_currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_currency_tb_jv_header_currency_idTotb_currency      tb_currency?   @relation("tb_jv_header_currency_idTotb_currency", fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([jv_no, jv_date], map: "jv_header_jv_no_jv_date_u")
  }
  
  enum enum_pricelist_template_status {
    draft
    active
    inactive
  }
  model tb_pricelist_template {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name String @unique @db.VarChar
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    status enum_pricelist_template_status @default(draft)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_pricelist_template_detail tb_pricelist_template_detail[]
    tb_request_for_pricing       tb_request_for_pricing[]
  
    @@index([name], map: "pricelist_template_name_u")
    @@map("tb_pricelist_template")
  }
  
  model tb_pricelist_template_detail {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    pricelist_template_id String @db.Uuid
    sequence_no Int? @default(1)
  
    product_id String @db.Uuid
    product_name String? @db.VarChar
  
    array_order_unit Json? @db.Json
    /*
    [{"unit_id" : "00000000-0000-0000-0000-000000000000", "unit_name" : "pcs"},
    {"unit_id" : "00000000-0000-0000-0000-000000000001", "unit_name" : "Box/12"}]
    */
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_pricelist_template tb_pricelist_template @relation(fields: [pricelist_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product           tb_product           @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([pricelist_template_id, product_id], map: "pricelist_template_detail_pricelist_template_id_product_id_u")
    @@map("tb_pricelist_template_detail")
  }
  
  model tb_request_for_pricing {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  
    pricelist_template_id String @db.Uuid
  
    start_date DateTime? @db.Timestamptz(6)
    end_date   DateTime? @db.Timestamptz(6)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_request_for_pricing_detail tb_request_for_pricing_detail[]
    tb_pricelist_template        tb_pricelist_template        @relation(fields: [pricelist_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([pricelist_template_id], map: "request_for_pricing_pricelist_template_id_u")
    @@map("tb_request_for_pricing")
  }
  
  model tb_request_for_pricing_detail {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    request_for_pricing_id String @db.Uuid
    sequence_no Int? @default(1)
  
    vendor_id String @db.Uuid
    vendor_name String? @db.VarChar
  
    contact_person String? @db.VarChar
    contact_phone String? @db.VarChar
    contact_email String? @db.VarChar
  
    pricelist_id String? @db.Uuid
    pricelist_name String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_request_for_pricing tb_request_for_pricing @relation(fields: [request_for_pricing_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_vendor tb_vendor @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([request_for_pricing_id, vendor_id], map: "request_for_pricing_detail_request_for_pricing_id_vendor_id_u")
    @@map("tb_request_for_pricing_detail")
  }
  
  model tb_pricelist {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  
    pricelist_no String  @unique @db.VarChar
    name         String? @unique @db.VarChar
  
    url_token String? @db.VarChar
  
    vendor_id   String? @db.Uuid
    vendor_name String? @db.VarChar
  
    from_date DateTime? @db.Timestamptz(6)
    to_date   DateTime? @db.Timestamptz(6)
  
    currency_id   String? @db.Uuid
    currency_name String? @db.VarChar
  
    is_active Boolean? @default(true)
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_vendor           tb_vendor?            @relation(fields: [vendor_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_pricelist_detail tb_pricelist_detail[]
    tb_currency        tb_currency?        @relation(fields: [currency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@index([name], map: "pricelist_name_u")
    @@map("tb_pricelist")
  }
  
  model tb_pricelist_detail {
    id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    pricelist_id      String   @db.Uuid
    sequence_no       Int?     @default(1)
    product_id        String   @db.Uuid
    product_name      String?  @db.VarChar
    unit_id           String?  @db.Uuid
    unit_name         String?  @db.VarChar
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    price             Decimal? @db.Decimal(20, 5)
    price_without_vat Decimal? @db.Decimal(20, 5)
    price_with_vat    Decimal? @db.Decimal(20, 5)
    is_active         Boolean? @default(true)
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_product                 tb_product                   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_unit                    tb_unit?                     @relation(fields: [unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_purchase_request_detail tb_purchase_request_detail[]
    tb_pricelist               tb_pricelist                 @relation(fields: [pricelist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  model tb_product_location {
    id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  
    product_id    String  @db.Uuid
    product_name  String? @db.VarChar
    location_id   String? @db.Uuid
    location_name String? @db.VarChar
  
    min_qty      Decimal? @default(0) @db.Decimal(20, 5)
    max_qty      Decimal? @default(0) @db.Decimal(20, 5)
    re_order_qty Decimal? @default(0) @db.Decimal(20, 5)
    par_qty      Decimal? @default(0) @db.Decimal(20, 5)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_location tb_location? @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_product  tb_product   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([product_id, location_id], map: "product_location_u")
  }
  
  model tb_department_user {
    id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    user_id       String   @db.Uuid
    department_id String   @db.Uuid
    is_hod        Boolean? @default(false)
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_department tb_department @relation(fields: [department_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([department_id, user_id], map: "department_user_u")
  }
  
  //api.carmen.com/attach/assdfd
  //s3.amazon.com/{business_unit}/{folder}/{token}/filename.ext
  
  model tb_attachment {
    id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    s3_token  String? @db.VarChar(255)
    s3_folder String? @db.VarChar(255)
    file_name String? @db.VarChar(255)
    file_ext  String? @db.VarChar(255)
    file_type String? @db.VarChar(255)
    file_size BigInt? @db.BigInt
    file_url  String? @db.VarChar(255)
  
    info        Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@unique([s3_token], map: "attachment_s3_token_u")
  }
  
  model tb_currency_comment {
    id          String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type        enum_comment_type @default(user)
    user_id     String?           @db.Uuid
    message     String?
    attachments Json?             @default("{}") @db.Json
  
    info Json?   @default("{}") @db.Json
    note String? @db.VarChar
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@unique([type, user_id], map: "currency_comment_type_user_id_u")
  }
  
  model tb_unit_comment {
    id          String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type        enum_comment_type @default(user)
    user_id     String?           @db.Uuid
    user_name   String?           @db.VarChar
    message     String?
    attachments Json?             @default("{}") @db.Json
  
    info Json?   @default("{}") @db.Json
    note String? @db.VarChar
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@unique([type, user_id], map: "unit_comment_type_user_id_u")
  }
  
  model tb_user_location {
    id          String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    user_id     String @db.Uuid
    location_id String @db.Uuid
  
    note String? @db.VarChar
    info Json?   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_location tb_location @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([user_id, location_id], map: "user_location_u")
  }
  
  model tb_user_profile {
    user_id    String  @id @db.Uuid
    firstname  String  @default("") @db.VarChar(100)
    middlename String? @default("") @db.VarChar(100)
    lastname   String? @default("") @db.VarChar(100)
    bio        Json?   @default("{}") @db.Json
  
    @@unique([user_id], map: "user_profile_user_id_u")
  }
  
  model tb_config_running_code {
    id     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    type   String? @db.VarChar(255)
    config Json?   @default("{}") @db.Json
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@unique([type], map: "config_running_code_type_u")
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_credit_term {
    id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String   @unique @db.VarChar
    value       Decimal? @db.Decimal(15, 5)
    description String?  @db.VarChar
    note        String?  @db.VarChar
  
    is_active Boolean? @default(true)
  
    info        Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_purchase_order tb_purchase_order[]
  
    @@index([name], map: "credit_term_name_u")
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_dimension {
    id    String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    key   String              @unique(map: "dimension_key_u") @db.VarChar
    type  enum_dimension_type @default(string)
    value Json?               @db.Json
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    default_value Json?    @db.Json
    is_active     Boolean? @default(true)
  
    info        Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_dimension_display_in tb_dimension_display_in[]
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_dimension_display_in {
    id            String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    dimension_id  String                    @db.Uuid
    display_in    enum_dimension_display_in
    default_value Json?                     @db.Json
  
    note        String? @db.VarChar
    info        Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_dimension tb_dimension @relation(fields: [dimension_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  
    @@unique([dimension_id, display_in], map: "dimension_display_in_u")
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_extra_cost {
    id                       String                         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name                     String?                        @db.VarChar
    good_received_note_id    String?                        @db.Uuid
    allocate_extra_cost_type enum_allocate_extra_cost_type?
  
    description String? @db.VarChar
    note        String? @db.VarChar
  
    info        Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_good_received_note tb_good_received_note? @relation(fields: [good_received_note_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_extra_cost_detail  tb_extra_cost_detail[]
  
    @@unique([name], map: "extra_cost_name_u")
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_extra_cost_detail {
    id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    extra_cost_id String @db.Uuid
    sequence_no   Int?   @default(1)
  
    extra_cost_type_id String @db.Uuid
  
    name        String? @db.VarChar
    description String? @db.VarChar
    note        String? @db.VarChar
  
    amount Decimal? @db.Decimal(20, 5)
  
    tax_profile_id    String?  @db.Uuid
    tax_profile_name  String?  @db.VarChar
    tax_rate          Decimal? @db.Decimal(15, 5)
    tax_amount        Decimal? @db.Decimal(20, 5)
    is_tax_adjustment Boolean? @default(false)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_extra_cost      tb_extra_cost      @relation(fields: [extra_cost_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    tb_extra_cost_type tb_extra_cost_type @relation(fields: [extra_cost_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
    // tb_tax_profile     tb_tax_profile?    @relation(fields: [tax_profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_extra_cost_type {
    id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String? @db.VarChar
    description String? @db.VarChar
    note        String? @db.VarChar
  
    is_active Boolean? @default(true)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_extra_cost_detail tb_extra_cost_detail[]
  
    @@unique([name], map: "extra_cost_type_name_u")
  }
  
  /// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
  model tb_vendor_business_type {
    id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    name        String   @unique @db.VarChar
    description String?  @db.VarChar
    note        String?  @db.VarChar
    is_active   Boolean? @default(true)
  
    info        Json?   @db.Json
    dimension   Json?   @db.Json
    doc_version Decimal @default(0) @db.Decimal
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    tb_vendor tb_vendor[]
  
    @@index([name], map: "vendor_business_type_name_u")
  }
  
  model tb_application_config {
    id    String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    key   String @db.VarChar
    value Json   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@unique([key], map: "application_config_key_u")
    @@index([key], map: "application_config_key_i")
  }
  
  model tb_application_user_config {
    id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    user_id String @db.Uuid
    key     String @db.VarChar
    value   Json   @db.Json
  
    created_at    DateTime? @default(now()) @db.Timestamptz(6)
    created_by_id String?   @db.Uuid
    updated_at    DateTime? @default(now()) @db.Timestamptz(6)
    updated_by_id String?   @db.Uuid
    deleted_at    DateTime? @db.Timestamptz(6)
    deleted_by_id String?   @db.Uuid
  
    @@unique([user_id, key], map: "application_user_config_u")
    @@index([user_id, key], map: "application_user_config_i")
  }
  


model tb_application_role {
  id                                                 String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_unit_id                                   String                              @db.Uuid
  name                                               String                              @unique @db.VarChar
  description                                        String?
  created_at                                         DateTime?                           @default(now()) @db.Timestamptz(6)
  created_by_id                                      String?                             @db.Uuid
  updated_at                                         DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_by_id                                      String?                             @db.Uuid
  tb_business_unit                                   tb_business_unit                    @relation(fields: [business_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_application_role_created_by_idTotb_user tb_user?                            @relation("tb_application_role_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_application_role_updated_by_idTotb_user tb_user?                            @relation("tb_application_role_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_application_role_tb_permission                  tb_application_role_tb_permission[]
  tb_user_tb_application_role                        tb_user_tb_application_role[]

  @@unique([business_unit_id, name], map: "applicationrole_business_unit_name_u")
  @@index([name])
}

model tb_application_role_tb_permission {
  id                                                               String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  application_role_id                                              String              @db.Uuid
  permission_id                                                    String              @db.Uuid
  created_at                                                       DateTime?           @default(now()) @db.Timestamptz(6)
  created_by_id                                                    String?             @db.Uuid
  updated_at                                                       DateTime?           @default(now()) @db.Timestamptz(6)
  updated_by_id                                                    String?             @db.Uuid
  tb_application_role                                              tb_application_role @relation(fields: [application_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_application_role_tb_permission_created_by_idTotb_user tb_user?            @relation("tb_application_role_tb_permission_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_permission                                                    tb_permission       @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_application_role_tb_permission_updated_by_idTotb_user tb_user?            @relation("tb_application_role_tb_permission_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([application_role_id, permission_id], map: "applicationrole_permission_application_role_permission_u")
}

model tb_business_unit {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cluster_id  String  @db.Uuid
  code        String  @db.VarChar(30)
  name        String
  description String?
  info        Json?

  is_hq                                           Boolean?                     @default(true)
  is_active                                       Boolean?                     @default(true)
  db_connection                                   Json?
  config                                          Json?
  created_at                                      DateTime?                    @default(now()) @db.Timestamptz(6)
  created_by_id                                   String?                      @db.Uuid
  updated_at                                      DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_by_id                                   String?                      @db.Uuid
  tb_application_role                             tb_application_role[]
  tb_cluster                                      tb_cluster                   @relation(fields: [cluster_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_business_unit_created_by_idTotb_user tb_user?                     @relation("tb_business_unit_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_business_unit_updated_by_idTotb_user tb_user?                     @relation("tb_business_unit_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_business_unit_tb_module                      tb_business_unit_tb_module[]
  tb_subscription_detail                          tb_subscription_detail[]
  tb_user_tb_business_unit                        tb_user_tb_business_unit[]

  @@unique([cluster_id, code], map: "business_unit_cluster_code_u")
  @@index([cluster_id], map: "business_unit_cluster_idx")
  @@index([code], map: "business_unit_code_idx")
}

model tb_business_unit_tb_module {
  id                                                        String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business_unit_id                                          String           @db.Uuid
  module_id                                                 String           @db.Uuid
  created_at                                                DateTime?        @default(now()) @db.Timestamptz(6)
  created_by_id                                             String?          @db.Uuid
  updated_at                                                DateTime?        @default(now()) @db.Timestamptz(6)
  updated_by_id                                             String?          @db.Uuid
  tb_business_unit                                          tb_business_unit @relation(fields: [business_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_business_unit_tb_module_created_by_idTotb_user tb_user?         @relation("tb_business_unit_tb_module_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_module                                                 tb_module        @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_business_unit_tb_module_updated_by_idTotb_user tb_user?         @relation("tb_business_unit_tb_module_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([business_unit_id, module_id], map: "businessunit_module_business_unit_module_u")
}

model tb_cluster {
  id                                        String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code                                      String             @unique(map: "cluster_code_u") @db.VarChar(30)
  name                                      String             @unique(map: "cluster_name_u")
  is_active                                 Boolean?           @default(true)
  info                                      Json?              @db.Json
  created_at                                DateTime?          @default(now()) @db.Timestamptz(6)
  created_by_id                             String?            @db.Uuid
  updated_at                                DateTime?          @default(now()) @db.Timestamptz(6)
  updated_by_id                             String?            @db.Uuid
  tb_business_unit                          tb_business_unit[]
  tb_user_tb_cluster_created_by_idTotb_user tb_user?           @relation("tb_cluster_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_cluster_updated_by_idTotb_user tb_user?           @relation("tb_cluster_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_cluster_user                           tb_cluster_user[]
  tb_subscription                           tb_subscription[]
}

model tb_cluster_user {
  id                                             String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                        String?                @db.Uuid
  cluster_id                                     String                 @db.Uuid
  is_active                                      Boolean?               @default(true)
  role                                           enum_cluster_user_role @default(user)
  created_at                                     DateTime?              @default(now()) @db.Timestamptz(6)
  created_by_id                                  String?                @db.Uuid
  updated_at                                     DateTime?              @default(now()) @db.Timestamptz(6)
  updated_by_id                                  String?                @db.Uuid
  tb_cluster                                     tb_cluster             @relation(fields: [cluster_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_cluster_user_created_by_idTotb_user tb_user?               @relation("tb_cluster_user_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_cluster_user_updated_by_idTotb_user tb_user?               @relation("tb_cluster_user_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_cluster_user_user_idTotb_user       tb_user?               @relation("tb_cluster_user_user_idTotb_user", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, cluster_id], map: "user_cluster_u")
}

model tb_currency_iso {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  iso_code String @unique @db.VarChar(3)
  name     String @default("Unknown") @db.VarChar(255)
  symbol   String @default("Unknown") @db.VarChar(10)
}

model tb_message_format {
  id                                               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                             String    @unique @db.VarChar
  message                                          String?
  is_email                                         Boolean   @default(false)
  is_sms                                           Boolean?  @default(false)
  is_in_app                                        Boolean?  @default(true)
  created_at                                       DateTime? @default(now()) @db.Timestamptz(6)
  created_by_id                                    String?   @db.Uuid
  updated_at                                       DateTime? @default(now()) @db.Timestamptz(6)
  updated_by_id                                    String?   @db.Uuid
  tb_user_tb_message_format_created_by_idTotb_user tb_user?  @relation("tb_message_format_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_message_format_updated_by_idTotb_user tb_user?  @relation("tb_message_format_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([name], map: "messageformat_name_u")
}

model tb_module {
  id                                       String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                                     String                       @unique @db.VarChar
  description                              String?
  created_at                               DateTime?                    @default(now()) @db.Timestamptz(6)
  created_by_id                            String?                      @db.Uuid
  updated_at                               DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_by_id                            String?                      @db.Uuid
  tb_business_unit_tb_module               tb_business_unit_tb_module[]
  tb_user_tb_module_created_by_idTotb_user tb_user?                     @relation("tb_module_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_module_updated_by_idTotb_user tb_user?                     @relation("tb_module_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_subscription_detail                   tb_subscription_detail[]

  @@index([name], map: "module_name_u")
}

model tb_notification {
  id                                             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  from_user_id                                   String    @db.Uuid
  to_user_id                                     String    @db.Uuid
  message                                        String?
  is_read                                        Boolean?  @default(false)
  is_sent                                        Boolean?  @default(false)
  created_at                                     DateTime? @default(now()) @db.Timestamptz(6)
  created_by_id                                  String?   @db.Uuid
  updated_at                                     DateTime? @default(now()) @db.Timestamptz(6)
  updated_by_id                                  String?   @db.Uuid
  tb_user_tb_notification_created_by_idTotb_user tb_user?  @relation("tb_notification_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_notification_from_user_idTotb_user  tb_user   @relation("tb_notification_from_user_idTotb_user", fields: [from_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_notification_to_user_idTotb_user    tb_user   @relation("tb_notification_to_user_idTotb_user", fields: [to_user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_notification_updated_by_idTotb_user tb_user?  @relation("tb_notification_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tb_password {
  id                                         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                    String    @db.Uuid
  hash                                       String
  is_active                                  Boolean?  @default(false)
  expired_on                                 DateTime  @default(dbgenerated("(now() + '90 days'::interval)")) @db.Timestamptz(6)
  created_at                                 DateTime? @default(now()) @db.Timestamptz(6)
  created_by_id                              String?   @db.Uuid
  tb_user_tb_password_created_by_idTotb_user tb_user?  @relation("tb_password_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_password_user_idTotb_user       tb_user   @relation("tb_password_user_idTotb_user", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "password_user_idx")
}

model tb_permission {
  id                                           String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  group                                        String                              @db.VarChar
  name                                         String                              @db.VarChar
  description                                  String?
  created_at                                   DateTime?                           @default(now()) @db.Timestamptz(6)
  created_by_id                                String?                             @db.Uuid
  updated_at                                   DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_by_id                                String?                             @db.Uuid
  tb_application_role_tb_permission            tb_application_role_tb_permission[]
  tb_user_tb_permission_created_by_idTotb_user tb_user?                            @relation("tb_permission_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_permission_updated_by_idTotb_user tb_user?                            @relation("tb_permission_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([group, name], map: "permission_group_name_u")
}

model tb_subscription {
  id                                             String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cluster_id                                     String                   @db.Uuid
  subscription_number                            String                   @db.VarChar
  start_date                                     DateTime                 @db.Timestamptz(6)
  end_date                                       DateTime                 @db.Timestamptz(6)
  status                                         enum_subscription_status
  created_at                                     DateTime?                @default(now()) @db.Timestamptz(6)
  created_by_id                                  String?                  @db.Uuid
  updated_at                                     DateTime?                @default(now()) @db.Timestamptz(6)
  updated_by_id                                  String?                  @db.Uuid
  tb_cluster                                     tb_cluster               @relation(fields: [cluster_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_subscription_created_by_idTotb_user tb_user?                 @relation("tb_subscription_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_subscription_updated_by_idTotb_user tb_user?                 @relation("tb_subscription_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_subscription_detail                         tb_subscription_detail[]

  @@unique([cluster_id, subscription_number], map: "subscription_cluster_subscription_number_u")
}

model tb_subscription_detail {
  id                                                    String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  subscription_id                                       String           @db.Uuid
  business_unit_id                                      String           @db.Uuid
  module_id                                             String           @db.Uuid
  created_at                                            DateTime?        @default(now()) @db.Timestamptz(6)
  created_by_id                                         String?          @db.Uuid
  updated_at                                            DateTime?        @default(now()) @db.Timestamptz(6)
  updated_by_id                                         String?          @db.Uuid
  tb_business_unit                                      tb_business_unit @relation(fields: [business_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_subscription_detail_created_by_idTotb_user tb_user?         @relation("tb_subscription_detail_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_module                                             tb_module        @relation(fields: [module_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_subscription                                       tb_subscription  @relation(fields: [subscription_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_subscription_detail_updated_by_idTotb_user tb_user?         @relation("tb_subscription_detail_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([subscription_id, business_unit_id, module_id], map: "subscriptiondetail_subscription_business_unit_module_u")
}

model tb_user {
  id                                                                                         String                              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username                                                                                   String                              @unique
  email                                                                                      String
  platform_role                                                                              enum_platform_role                  @default(user)
  is_active                                                                                  Boolean?                            @default(false)
  is_consent                                                                                 Boolean?                            @default(false)
  consent_at                                                                                 DateTime?                           @db.Timestamptz(6)
  created_at                                                                                 DateTime?                           @default(now()) @db.Timestamptz(6)
  created_by_id                                                                              String?                             @db.Uuid
  updated_at                                                                                 DateTime?                           @default(now()) @db.Timestamptz(6)
  updated_by_id                                                                              String?                             @db.Uuid
  tb_application_role_tb_application_role_created_by_idTotb_user                             tb_application_role[]               @relation("tb_application_role_created_by_idTotb_user")
  tb_application_role_tb_application_role_updated_by_idTotb_user                             tb_application_role[]               @relation("tb_application_role_updated_by_idTotb_user")
  tb_application_role_tb_permission_tb_application_role_tb_permission_created_by_idTotb_user tb_application_role_tb_permission[] @relation("tb_application_role_tb_permission_created_by_idTotb_user")
  tb_application_role_tb_permission_tb_application_role_tb_permission_updated_by_idTotb_user tb_application_role_tb_permission[] @relation("tb_application_role_tb_permission_updated_by_idTotb_user")
  tb_business_unit_tb_business_unit_created_by_idTotb_user                                   tb_business_unit[]                  @relation("tb_business_unit_created_by_idTotb_user")
  tb_business_unit_tb_business_unit_updated_by_idTotb_user                                   tb_business_unit[]                  @relation("tb_business_unit_updated_by_idTotb_user")
  tb_business_unit_tb_module_tb_business_unit_tb_module_created_by_idTotb_user               tb_business_unit_tb_module[]        @relation("tb_business_unit_tb_module_created_by_idTotb_user")
  tb_business_unit_tb_module_tb_business_unit_tb_module_updated_by_idTotb_user               tb_business_unit_tb_module[]        @relation("tb_business_unit_tb_module_updated_by_idTotb_user")
  tb_cluster_tb_cluster_created_by_idTotb_user                                               tb_cluster[]                        @relation("tb_cluster_created_by_idTotb_user")
  tb_cluster_tb_cluster_updated_by_idTotb_user                                               tb_cluster[]                        @relation("tb_cluster_updated_by_idTotb_user")
  tb_cluster_user_tb_cluster_user_created_by_idTotb_user                                     tb_cluster_user[]                   @relation("tb_cluster_user_created_by_idTotb_user")
  tb_cluster_user_tb_cluster_user_updated_by_idTotb_user                                     tb_cluster_user[]                   @relation("tb_cluster_user_updated_by_idTotb_user")
  tb_cluster_user_tb_cluster_user_user_idTotb_user                                           tb_cluster_user[]                   @relation("tb_cluster_user_user_idTotb_user")
  tb_message_format_tb_message_format_created_by_idTotb_user                                 tb_message_format[]                 @relation("tb_message_format_created_by_idTotb_user")
  tb_message_format_tb_message_format_updated_by_idTotb_user                                 tb_message_format[]                 @relation("tb_message_format_updated_by_idTotb_user")
  tb_module_tb_module_created_by_idTotb_user                                                 tb_module[]                         @relation("tb_module_created_by_idTotb_user")
  tb_module_tb_module_updated_by_idTotb_user                                                 tb_module[]                         @relation("tb_module_updated_by_idTotb_user")
  tb_notification_tb_notification_created_by_idTotb_user                                     tb_notification[]                   @relation("tb_notification_created_by_idTotb_user")
  tb_notification_tb_notification_from_user_idTotb_user                                      tb_notification[]                   @relation("tb_notification_from_user_idTotb_user")
  tb_notification_tb_notification_to_user_idTotb_user                                        tb_notification[]                   @relation("tb_notification_to_user_idTotb_user")
  tb_notification_tb_notification_updated_by_idTotb_user                                     tb_notification[]                   @relation("tb_notification_updated_by_idTotb_user")
  tb_password_tb_password_created_by_idTotb_user                                             tb_password[]                       @relation("tb_password_created_by_idTotb_user")
  tb_password_tb_password_user_idTotb_user                                                   tb_password[]                       @relation("tb_password_user_idTotb_user")
  tb_permission_tb_permission_created_by_idTotb_user                                         tb_permission[]                     @relation("tb_permission_created_by_idTotb_user")
  tb_permission_tb_permission_updated_by_idTotb_user                                         tb_permission[]                     @relation("tb_permission_updated_by_idTotb_user")
  tb_subscription_tb_subscription_created_by_idTotb_user                                     tb_subscription[]                   @relation("tb_subscription_created_by_idTotb_user")
  tb_subscription_tb_subscription_updated_by_idTotb_user                                     tb_subscription[]                   @relation("tb_subscription_updated_by_idTotb_user")
  tb_subscription_detail_tb_subscription_detail_created_by_idTotb_user                       tb_subscription_detail[]            @relation("tb_subscription_detail_created_by_idTotb_user")
  tb_subscription_detail_tb_subscription_detail_updated_by_idTotb_user                       tb_subscription_detail[]            @relation("tb_subscription_detail_updated_by_idTotb_user")
  tb_user_tb_user_created_by_idTotb_user                                                     tb_user?                            @relation("tb_user_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_tb_user_tb_user_created_by_idTotb_user                                               tb_user[]                           @relation("tb_user_created_by_idTotb_user")
  tb_user_tb_user_updated_by_idTotb_user                                                     tb_user?                            @relation("tb_user_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_tb_user_tb_user_updated_by_idTotb_user                                               tb_user[]                           @relation("tb_user_updated_by_idTotb_user")
  tb_user_login_session                                                                      tb_user_login_session[]
  tb_user_profile_tb_user_profile_created_by_idTotb_user                                     tb_user_profile[]                   @relation("tb_user_profile_created_by_idTotb_user")
  tb_user_profile_tb_user_profile_updated_by_idTotb_user                                     tb_user_profile[]                   @relation("tb_user_profile_updated_by_idTotb_user")
  tb_user_profile_tb_user_profile_user_idTotb_user                                           tb_user_profile[]                   @relation("tb_user_profile_user_idTotb_user")
  tb_user_tb_application_role_tb_user_tb_application_role_created_by_idTotb_user             tb_user_tb_application_role[]       @relation("tb_user_tb_application_role_created_by_idTotb_user")
  tb_user_tb_application_role_tb_user_tb_application_role_updated_by_idTotb_user             tb_user_tb_application_role[]       @relation("tb_user_tb_application_role_updated_by_idTotb_user")
  tb_user_tb_application_role_tb_user_tb_application_role_user_idTotb_user                   tb_user_tb_application_role[]       @relation("tb_user_tb_application_role_user_idTotb_user")
  tb_user_tb_business_unit_tb_user_tb_business_unit_created_by_idTotb_user                   tb_user_tb_business_unit[]          @relation("tb_user_tb_business_unit_created_by_idTotb_user")
  tb_user_tb_business_unit_tb_user_tb_business_unit_updated_by_idTotb_user                   tb_user_tb_business_unit[]          @relation("tb_user_tb_business_unit_updated_by_idTotb_user")
  tb_user_tb_business_unit_tb_user_tb_business_unit_user_idTotb_user                         tb_user_tb_business_unit[]          @relation("tb_user_tb_business_unit_user_idTotb_user")

  @@index([email], map: "user_email_idx")
  @@index([username], map: "user_username_idx")
}

model tb_user_login_session {
  id         String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  token      String          @unique
  token_type enum_token_type @default(access_token)
  user_id    String          @db.Uuid
  expired_on DateTime        @default(dbgenerated("(now() + '1 day'::interval)")) @db.Timestamptz(6)
  tb_user    tb_user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}


model tb_user_tb_application_role {
  id                                                         String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                                    String              @db.Uuid
  application_role_id                                        String              @db.Uuid
  created_at                                                 DateTime?           @default(now()) @db.Timestamptz(6)
  created_by_id                                              String?             @db.Uuid
  updated_at                                                 DateTime?           @default(now()) @db.Timestamptz(6)
  updated_by_id                                              String?             @db.Uuid
  tb_application_role                                        tb_application_role @relation(fields: [application_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_user_tb_application_role_created_by_idTotb_user tb_user?            @relation("tb_user_tb_application_role_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_user_tb_application_role_updated_by_idTotb_user tb_user?            @relation("tb_user_tb_application_role_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_user_tb_application_role_user_idTotb_user       tb_user             @relation("tb_user_tb_application_role_user_idTotb_user", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, application_role_id], map: "user_applicationrole_user_application_role_u")
}

model tb_user_tb_business_unit {
  id                                                      String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                                                 String?                      @db.Uuid
  business_unit_id                                        String?                      @db.Uuid
  role                                                    enum_user_business_unit_role @default(user)
  is_default                                              Boolean?                     @default(false)
  is_active                                               Boolean?                     @default(true)
  created_at                                              DateTime?                    @default(now()) @db.Timestamptz(6)
  created_by_id                                           String?                      @db.Uuid
  updated_at                                              DateTime?                    @default(now()) @db.Timestamptz(6)
  updated_by_id                                           String?                      @db.Uuid
  tb_business_unit                                        tb_business_unit?            @relation(fields: [business_unit_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_user_tb_business_unit_created_by_idTotb_user tb_user?                     @relation("tb_user_tb_business_unit_created_by_idTotb_user", fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_user_tb_business_unit_updated_by_idTotb_user tb_user?                     @relation("tb_user_tb_business_unit_updated_by_idTotb_user", fields: [updated_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_user_tb_user_tb_business_unit_user_idTotb_user       tb_user?                     @relation("tb_user_tb_business_unit_user_idTotb_user", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([user_id, business_unit_id], map: "user_businessunit_user_business_unit_u")
}

enum enum_cluster_user_role {
  admin
  user
}

enum enum_platform_role {
  platform_admin
  support_manager
  support_staff
  security_officer
  integration_developer
  user
}

enum enum_subscription_status {
  active
  inactive
  expired
}

enum enum_token_type {
  access_token
  refresh_token
}

enum enum_user_business_unit_role {
  admin
  user
}
